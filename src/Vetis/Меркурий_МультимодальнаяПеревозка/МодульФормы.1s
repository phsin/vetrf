Перем ВыбДокКонтекст; //:Документ.ВСД2_Транзакция
Перем оПривязки; //:Меркурий.Привязки
Перем тпТочкиПерегрузки; 
Перем тзТочкиПерегрузки;
Перем тпИзменения; 
Перем тзИзменения;
Перем тпДокументы, тзДокументы; // Таблица документов для группой обработки

//Служебные функции
Функция Этот(Конт) 	Возврат Конт; КонецФункции
Функция Сам() 	Возврат Этот(Контекст); КонецФункции

Процедура УправлениеДоступностью() Далее


///******************************** ADirks 29.11.2019 ************
Процедура Шаблоны()
	Площадка = ВыбДокКонтекст.Получатель_Площадка;
	Код = СокрЛП(Площадка.GUID);
	
	ИмяФайла = ГМ.ПолучитьКонстанту("КаталогМодуля")+"Настройки\ШаблоныМаршрутов_"+Код+".СЗ";
	
	сзШаблоны = ЗначениеИзФайла(ИмяФайла);
	Если ТипЗначенияСтр(сзШаблоны) <> "СписокЗначений" Тогда
		сзШаблоны = СоздатьОбъект("СписокЗначений");
	КонецЕсли;
	
	сзМеню = СоздатьОбъект("СписокЗначений");
	сзШаблоны.Выгрузить(сзМеню);
	
	сзМеню.ДобавитьЗначение("", "---------------------");
	сзМеню.ДобавитьЗначение("<Записать>", "Записать текущий маршрут в шаблоны");
	сзМеню.ДобавитьЗначение("<Удалить>", "Удалить текущий маршрут из шаблонов");
	
	Команда = ""; нШаблон = 0;
	Если сзМеню.ВыбратьЗначение(Команда,, нШаблон,, 1) <> 1 Тогда
		Возврат;
	ИначеЕсли Команда = "" Тогда
		Возврат;
	КонецЕсли;
	
	Если Команда = "<Записать>" Тогда
		Описание = "";
		Если ВвестиСтроку(Описание, "Описание шаблона", 255, 0) <> 1 Тогда
			Возврат;
		ИначеЕсли ПустаяСтрока(Описание) = 1 Тогда
			Предупреждение("Укажите описание шаблона", 5);
			Возврат;
		КонецЕсли;		
		
		тзМаршрут = тпТочкиПерегрузки.тзДанные();
		Значение = сзШаблоны.Получить(Описание); 
		сзШаблоны.Установить(Описание, тзМаршрут);
		
		ЗначениеВФайл(ИмяФайла, сзШаблоны, 1);

	ИначеЕсли Команда = "<Удалить>" Тогда
	
		зн=0; Позиция=0;
		сзШаблоны.ВыбратьЗначение(зн, "Удалить шаблон",Позиция,30,0);
		
		//тзМаршрут = тпТочкиПерегрузки.тзДанные();
		//позиция = сзШаблоны.НайтиЗначение( тзМаршрут );
		Если позиция>0 Тогда 
			сзШаблоны.УдалитьЗначение( позиция );
			ЗначениеВФайл(ИмяФайла, сзШаблоны, 1);
		Иначе
			Предупреждение("Шаблон не выбран");
		КонецЕсли;
		

	Иначе
		тзТочкиПерегрузки = сзМеню.ПолучитьЗначение(нШаблон);
		тпТочкиПерегрузки.УстановитьПоставщикаДанных(тзТочкиПерегрузки);
		УправлениеДоступностью();
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 29.11.2019 ************

//======================================================================
Процедура УправлениеДоступностью()
	Доступность = ?(тзТочкиПерегрузки.КоличествоСтрок() > 0, 1, 0);

	Форма.ВыбХС.Доступность(Доступность);
	Форма.ВыбПлощадка.Доступность(Доступность);
	Форма.Страна.Доступность(Доступность);
	Форма.Регион.Доступность(Доступность);
	Форма.Район.Доступность(Доступность);
	Форма.Город.Доступность(Доступность);
	Форма.Улица.Доступность(Доступность);
	Форма.Дом.Доступность(Доступность);
	Форма.Строение.Доступность(Доступность);
	Форма.Помещение.Доступность(Доступность);
	Форма.ТипыТранспорта.Доступность(Доступность);
	Форма.НомерТС.Доступность(Доступность);
	Форма.номерПрицепа.Доступность(Доступность);
	Форма.номерКонтейнера.Доступность(Доступность);

	Форма.кнЗаписатьАдрес.Доступность(Доступность);
КонецПроцедуры // УправлениеДоступностью

//======================================================================
Процедура УправлениеВидимостью()
	Если ТипыТранспорта.ТекущаяСтрока() = 1 Тогда
		Форма.рамкаНомерТС.Заголовок("Номер автомобиля");
	ИначеЕсли ТипыТранспорта.ТекущаяСтрока() = 2 Тогда
		Форма.рамкаНомерТС.Заголовок("Номер вагона");
	ИначеЕсли ТипыТранспорта.ТекущаяСтрока() = 3 Тогда
		Форма.рамкаНомерТС.Заголовок("Номер авиарейса");
	ИначеЕсли ТипыТранспорта.ТекущаяСтрока() = 4 Тогда
		Форма.рамкаНомерТС.Заголовок("Номер контейнера");
	ИначеЕсли ТипыТранспорта.ТекущаяСтрока() = 5 Тогда
		Форма.рамкаНомерТС.Заголовок("Название судна");
	КонецЕсли;

	Видимость = ?(ТипыТранспорта.ТекущаяСтрока() = 1, 1, 0);

	Форма.рамкаПрицеп.Видимость(Видимость);
	Форма.номерПрицепа.Видимость(Видимость);
	Форма.рамкаКонтейнер.Видимость(Видимость);
	Форма.номерКонтейнера.Видимость(Видимость);
КонецПроцедуры // УправлениеВидимостью

//======================================================================
Процедура ТаблПолеПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		Если ПустоеЗначение(ДанныеСтроки.ВыбПлощадка) = 1 Тогда
			Если ПустоеЗначение(ДанныеСтроки.Страна) = 1 Тогда
				ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("ВыбПлощадка");
				ОбъектЯчейка.Текст = "выберите площадку или укажите адрес";
				ОбъектЯчейка.ЦветТекста=255;// Красный
			Иначе
				ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("ВыбПлощадка");
				ОбъектЯчейка.Текст = "указан адрес";
				ОбъектЯчейка.ЦветТекста=111;
			КонецЕсли;
		КонецЕсли;
		ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("ТипТранспорта");
		Если Число(ДанныеСтроки.ТипТранспорта) <> 0 Тогда
			Стр = "";
			ТипыТранспорта.ПолучитьЗначение(ДанныеСтроки.ТипТранспорта, Стр);
			ОбъектЯчейка.Текст = Стр;
		КонецЕсли;
		ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Перегрузка");
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ТочкиПерегрузкиПриАктивизацииСтроки(ТабличноеПоле)
	Если ПустоеЗначение(ТабличноеПоле.ТекущиеДанные)=1 Тогда Возврат; КонецЕсли;
	Если тзТочкиПерегрузки.КоличествоСтрок()=0 Тогда Возврат; КонецЕсли;
	тзТочкиПерегрузки.ТекущаяСтрока(ТабличноеПоле.ТекущиеДанные.НомерСтроки);
	тзТочкиПерегрузки.ПолучитьСтрокуПоНомеру(ТабличноеПоле.ТекущиеДанные.НомерСтроки);

	ВыбХС = тзТочкиПерегрузки.ВыбХС;
	ВыбПлощадка = тзТочкиПерегрузки.ВыбПлощадка;
	Страна = тзТочкиПерегрузки.Страна;
	Регион = тзТочкиПерегрузки.Регион;
	Район = тзТочкиПерегрузки.Район;
	Город = тзТочкиПерегрузки.Город;
	Улица = тзТочкиПерегрузки.Улица;
	Дом = тзТочкиПерегрузки.Дом;
	Строение = тзТочкиПерегрузки.Строение;
	Помещение = тзТочкиПерегрузки.Помещение;

	Поз = ТипыТранспорта.НайтиЗначение(тзТочкиПерегрузки.ТипТранспорта);
	Если Поз <> 0 Тогда
		ТипыТранспорта.ТекущаяСтрока(Поз);
	КонецЕсли;

	НомерТС = тзТочкиПерегрузки.НомерТС;
	номерПрицепа = тзТочкиПерегрузки.номерПрицепа;
	номерКонтейнера = тзТочкиПерегрузки.номерКонтейнера;

	Название = тзТочкиПерегрузки.Название;

	Форма.Обновить();
КонецПроцедуры

//======================================================================
Процедура ТочкиПерегрузкиПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)
	тзТочкиПерегрузки.Перегрузка = ?(тзТочкиПерегрузки.Перегрузка = 1,0,1);
	ТабличноеПоле.ОбновитьСтроки();
КонецПроцедуры

//******************************************************************************
// ИзменениеПозиции(НаправлениеСдвига)
//
// Параметры:
//  НаправлениеСдвига = 	-1 - вниз
//							 1 - вверх
// Возвращаемое значение:
//	Нет
//
// Вызывается из формул элементов диалога:
//  кнопки "вверх" и "вниз" рядом со списком группировок
//
// Описание:
//	Процедура производит сдвиг текущей строки в общем
// 	списке на "НаправлениеСдвига" позиций
//
Процедура ИзменениеПозиции(НаправлениеСдвига)

	Если Число(тпТочкиПерегрузки.ТекущаяСтрока) > 0 Тогда
		ТекСтр = тпТочкиПерегрузки.ТекущаяСтрока;
		ПослСдвигСтр = тзТочкиПерегрузки.КоличествоСтрок();
		Если не((НаправлениеСдвига = 1) и (ТекСтр = ПослСдвигСтр)) Тогда
			тзТочкиПерегрузки.СдвинутьСтроку(НаправлениеСдвига, ТекСтр);
		КонецЕсли;

		тпТочкиПерегрузки.ОбновитьСтроки();

		ТекСтр = ТекСтр + НаправлениеСдвига;
		ТекСтр = ?(ТекСтр > тзТочкиПерегрузки.КоличествоСтрок(), тзТочкиПерегрузки.КоличествоСтрок(), ТекСтр);
		ТекСтр = ?(ТекСтр > 0, ТекСтр, 1);
		Если тзТочкиПерегрузки.КоличествоСтрок() > 0 Тогда
			тпТочкиПерегрузки.ТекущаяСтрока = ТекСтр;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ИзменениеПозиции()

//======================================================================
Процедура ПоКнопкеДобавитьСтроку()
	тзТочкиПерегрузки.НоваяСтрока();
	тпТочкиПерегрузки.ТекущаяСтрока = тзТочкиПерегрузки.КоличествоСтрок();
	тзТочкиПерегрузки.ТипТранспорта = ТипыТранспорта.ПолучитьЗначение(ТипыТранспорта.ТекущаяСтрока());
	тпТочкиПерегрузки.ОбновитьСтроки();

	УправлениеДоступностью();
КонецПроцедуры // ДобавитьСтроку

//======================================================================
Процедура ПоКнопкеУдалитьСтроку()
	Если ПустоеЗначение(тпТочкиПерегрузки.ТекущиеДанные)=1 Тогда Возврат; КонецЕсли;

	тзТочкиПерегрузки.УдалитьСтроку(тпТочкиПерегрузки.ТекущаяСтрока);
	тпТочкиПерегрузки.ОбновитьСтроки();
КонецПроцедуры // ПоКнопкеУдалитьСтроку

//======================================================================
Процедура ПоКнопкеУдалитьВсе()
	тзТочкиПерегрузки.УдалитьСтроки();
	тпТочкиПерегрузки.ОбновитьСтроки();
КонецПроцедуры // ПоКнопкеУдалитьВсе

//======================================================================
Процедура ПоКнопкеЗаписать()
	
	Если ПустоеЗначение(тзДокументы)=0 Тогда 
		
		ДокОбъект = СоздатьОбъект("Документ.ВСД2_Транзакция");
		тзДокументы.ВыбратьСтроки();
		Пока тзДокументы.ПолучитьСтроку() = 1 Цикл
			
			ДокОбъект.НайтиДокумент( тзДокументы.Док );
			Если ПустаяСтрока( ДокОбъект.ИмяФайлаМаршрутДоставки) = 1 Тогда
				ДокОбъект.ИмяФайлаМаршрутДоставки = ГМ2.ПолучитьИмяФайла_МаршрутДоставки( ДокОбъект );	
			КонецЕсли;
			ЗначениеВФайл( ДокОбъект.ИмяФайлаМаршрутДоставки, тзТочкиПерегрузки);
			ДокОбъект.Записать();
			
		КонецЦикла;
		
	Иначе		
		
		Если ПустаяСтрока(ВыбДокКонтекст.ИмяФайлаМаршрутДоставки) = 1 Тогда
			ВыбДокКонтекст.ИмяФайлаМаршрутДоставки = ГМ2.ПолучитьИмяФайла_МаршрутДоставки( ВыбДокКонтекст );	
		Иначе
			Сообщить("для отправки изменений в Ветис после создания ВСД откройте страницу [Отправка изменений]","i");
		КонецЕсли;
	
		ЗначениеВФайл( ВыбДокКонтекст.ИмяФайлаМаршрутДоставки, тзТочкиПерегрузки);
		
		ВыбДокКонтекст.Форма.Обновить(1); // установим признак изменения в форме документа
		
		Попытка
			ВыбДокКонтекст.ПоказатьСписокТочекПерегрузки();
		Исключение
		КонецПопытки;
		
		// нельзя т.к Конт = Контекст формы документа
		//Попытка
		//	Конт.Записать();
		//Исключение
		//	Сообщить(ОписаниеОшибки());
		//КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры // ПоКнопкеЗаписать

//======================================================================
Процедура ПоКнопкеЗаписатьАдрес()
	Если ВыбПлощадка.Выбран() = 1 Тогда
		СпрПл = СоздатьОбъект("Справочник.ВСД_Площадка");
		СпрПл.НайтиЭлемент(ВыбПлощадка);

		СпрПл.Страна = Страна;
		СпрПл.Регион = Регион;
		СпрПл.Район= Район;
		СпрПл.Город= Город;
		СпрПл.Улица= Улица;
		СпрПл.Дом= Дом;
		СпрПл.Строение= Строение;
		СпрПл.Помещение= Помещение;

		СпрПл.Записать();
	Иначе
		Предупреждение("Не выбрана площадка!");
	КонецЕсли;
КонецПроцедуры // ПоКнопкеЗаписатьАдрес

//======================================================================
Процедура ПоКнопкеЗагрузитьАдрес()

КонецПроцедуры // ПоКнопкеЗагрузить

//======================================================================
Процедура ПриВыбореПлощадки()
	Страна = ВыбПлощадка.Страна;
	Регион = ВыбПлощадка.Регион;
	Район = ВыбПлощадка.Район;
	Город = ВыбПлощадка.Город;
	Улица = ВыбПлощадка.Улица;
	Дом = ВыбПлощадка.Дом;
	Строение = ВыбПлощадка.Строение;
	Помещение = ВыбПлощадка.Помещение;

	тзТочкиПерегрузки.ВыбПлощадка = ВыбПлощадка;
	тзТочкиПерегрузки.Страна = Страна;
	тзТочкиПерегрузки.Регион = Регион;
	тзТочкиПерегрузки.Район = Район;
	тзТочкиПерегрузки.Город = Город;
	тзТочкиПерегрузки.Улица = Улица;
	тзТочкиПерегрузки.Дом = Дом;
	тзТочкиПерегрузки.Строение = Строение;
	тзТочкиПерегрузки.Помещение = Помещение;

	тпТочкиПерегрузки.ОбновитьСтроки();
КонецПроцедуры // ПриВыбореПлощадки

//======================================================================
Процедура ПриВыбореТипаТранспорта()
	УправлениеВидимостью();

	тзТочкиПерегрузки.ТипТранспорта = ТипыТранспорта.ПолучитьЗначение(ТипыТранспорта.ТекущаяСтрока());
	тпТочкиПерегрузки.ОбновитьСтроки();
КонецПроцедуры // ПриВыбореТипаТранспорта

//======================================================================
Процедура ПриИзмененииРеквизита(ИмяРеквизита, Значение)
	тзТочкиПерегрузки.УстановитьЗначение(тзТочкиПерегрузки.ТекущаяСтрока(), ИмяРеквизита, Значение);
	тпТочкиПерегрузки.ОбновитьСтроки();
	Если ИмяРеквизита = "НомерТС" Тогда
		тзТочкиПерегрузки.номерАвто = "";		тзТочкиПерегрузки.номерВагона = "";
		тзТочкиПерегрузки.НомерАвиарейса = "";	тзТочкиПерегрузки.НазваниеСудна = "";
		Если ТипыТранспорта.ТекущаяСтрока() = 1 Тогда
			ВремРеквизит = "номерАвто";
		ИначеЕсли ТипыТранспорта.ТекущаяСтрока() = 2 Тогда
			ВремРеквизит = "номерВагона";
		ИначеЕсли ТипыТранспорта.ТекущаяСтрока() = 3 Тогда
			ВремРеквизит = "НомерАвиарейса";
		ИначеЕсли ТипыТранспорта.ТекущаяСтрока() >= 4 Тогда
			ВремРеквизит = "НазваниеСудна";
		КонецЕсли;
		тзТочкиПерегрузки.УстановитьЗначение(тзТочкиПерегрузки.ТекущаяСтрока(), ВремРеквизит, Значение);
	КонецЕсли;
КонецПроцедуры // ПриИзмененииРеквизита("Страна", Страна)

//======================================================================
Процедура Привязки_Инит()
	
	//оПривязки = СоздатьОбъект("Меркурий.Привязки");
	//оПривязки.УстановитьФорму(Форма);
	оПривязки.Привязка("ТочкиПерегрузки", "H", "Форма", "W", "Форма");
	оПривязки.Привязка("Изменения", "H", "Форма", "W", "Форма");
	//оПривязки.Привязка("Версия,Инфо,ИнфоВыбор, тРеализация,тКолвоСписания","T","Форма");

КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()
	ГМ._ПриОткрытии(Контекст);
	
	Если ТипЗначенияСтр(Форма.Параметр) <> "СписокЗначений" Тогда
		Сообщить("Данная обработка вызывается из документа Транзакция2!");
		СтатусВозврата(0); Возврат;
	КонецЕсли;
	Конт = Форма.Параметр.Получить("Документ");

	ТипыТранспорта.ДобавитьЗначение(1,"Автомобильный");
	ТипыТранспорта.ДобавитьЗначение(2,"Железнодорожный");
	ТипыТранспорта.ДобавитьЗначение(3,"Авиатранспортный");
	ТипыТранспорта.ДобавитьЗначение(4,"Морской (контейнер)");
	ТипыТранспорта.ДобавитьЗначение(5,"Морской (трюм)");
	ТипыТранспорта.ТекущаяСтрока(1);

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной","Маршрут");
	Форма.Закладки.ДобавитьЗначение("ИзменитьМаршрут","Отправка изменений");

	Форма.ИспользоватьСлой("Основной");
	

	//тзТочкиПерегрузки = СоздатьОбъект("ТаблицаЗначений");
	//Порядок колонок имеет значние при сохранинии в Файл / восстановлении => структура должна быть единообразна
	тзТочкиПерегрузки = ГМ2.СоздатьТзМаршрутСледования();

	Если ТипЗначенияСтр(Конт)="ГрупповойКонтекст" Тогда 
	
		ВыбДокКонтекст = Конт;
		
	ИначеЕсли ТипЗначенияСтр(Конт)="СписокЗначений" Тогда 
		Форма.Закладки.ДобавитьЗначение("Документы","Список документов");
		
		Для А=1 По Конт.РазмерСписка() Цикл
			тзДокументы.НоваяСтрока();
			тзДокументы.Док = Конт.ПолучитьЗначение(А);
		КонецЦикла;
		ВыбДокКонтекст = тзДокументы.Док;
	КонецЕсли;
	
	Если ПустоеЗначение( ВыбДокКонтекст )=1 Тогда 
		Сообщить("НЕ выбран документ основание","!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока( ВыбДокКонтекст.ИмяФайлаМаршрутДоставки ) = 0 Тогда
		ВремТЗ = ЗначениеИзФайла( ВыбДокКонтекст.ИмяФайлаМаршрутДоставки );
		Если ТипЗначенияСтр(ВремТЗ) = "ТаблицаЗначений" Тогда
			Для СЦ = 1 По ВремТЗ.КоличествоСтрок() Цикл
				тзТочкиПерегрузки.НоваяСтрока();
				Для СК = 1 По тзТочкиПерегрузки.КоличествоКолонок() Цикл
					ИмяКолонки = тзТочкиПерегрузки.ПолучитьПараметрыКолонки(СК);
					Попытка
						тзТочкиПерегрузки.УстановитьЗначение(СЦ, СК, ВремТЗ.ПолучитьЗначение(СЦ, ИмяКолонки));
					Исключение
					КонецПопытки;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	//Повторно заполним реквизиты формы
	ГМ._ПриОткрытии(Контекст);	
	
	Привязки_Инит();
	
КонецПроцедуры // ПриОткрытии

//======================================================================
Процедура ПослеСозданияФормы()

    тпТочкиПерегрузки  = СоздатьОбъект("Меркурий.ТабличноеПоле.ТЗ");
    тпТочкиПерегрузки.Инит( Сам(), "ТочкиПерегрузки");
    тпТочкиПерегрузки.ИмяНастройки = "тпТочкиПерегрузки";
    тпТочкиПерегрузки.УстановитьТЗ( тзТочкиПерегрузки );
    тпТочкиПерегрузки.Показать();	
	
	Если тзТочкиПерегрузки.КоличествоСтрок() > 0 Тогда
		тпТочкиПерегрузки.ТекущаяСтрока = 1;
		ТочкиПерегрузкиПриАктивизацииСтроки(тпТочкиПерегрузки);
	КонецЕсли;

    тпДокументы  = СоздатьОбъект("Меркурий.ТабличноеПоле.ТЗ");
    тпДокументы.Инит( Сам(), "Документы");
    тпДокументы.ИмяНастройки = "Документы";
    тпДокументы.УстановитьТЗ( тзДокументы );
    тпДокументы.Показать();		
	
	УправлениеВидимостью();
	УправлениеДоступностью();

КонецПроцедуры

//======================================================================
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагПродолжения)

	Если ЭлементДиалога = "ВыбПлощадка" Тогда
		ВремЭлем = ВыбХС;

		Список = СоздатьОбъект("СписокЗначений");
		Спр = СоздатьОбъект("Справочник.ВСД_Площадка");
		Спр.ВыбратьЭлементыПоРеквизиту("GuidХозСубъекта",ВремЭлем.GUID,0,0);
		Пока Спр.ПолучитьЭлемент() = 1 Цикл
			Список.ДобавитьЗначение(Спр.ТекущийЭлемент());
		КонецЦикла;
		ОткрытьФорму("Справочник.ВСД_Площадка",Список);
		ФлагСтандОбр = 0;
	ИначеЕсли ЭлементДиалога = "Регион" Тогда
		ВремЭлем = Страна;
		ОткрытьФорму("Справочник.ВСД_Регион",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Район" Тогда
		ВремЭлем = Регион;
		ОткрытьФорму("Справочник.ВСД_Район",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Город" Тогда
		Если Район.Выбран() = 1 Тогда
			ВремЭлем = Район;    
		Иначе
			ВремЭлем = Регион;	
		КонецЕсли;		
		ОткрытьФорму("Справочник.ВСД_Город",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Улица" Тогда
		ВремЭлем = Город;
		ОткрытьФорму("Справочник.ВСД_Улица",ВремЭлем);
		ФлагПродолжения = 0;
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьДокументыИзменения()
	
	тзИзменения.ВыбратьСтроки();
	Пока тзИзменения.ПолучитьСтроку() = 1 Цикл
		док = СоздатьОбъект("Документ.ВСД2_ОбновитьТранспорт");
		Попытка
			Док.Новый();
			//Док.НомерДок = ;
			Док.ДатаДок = ТекущаяДата();
			Док.ДокОснование = тзИзменения.ВСД.ДокОснование;
			Док.Отправитель_ХозСубъект = Док.ДокОснование.Отправитель_ХозСубъект ;
			Док.Отправитель_Площадка = Док.ДокОснование.Отправитель_Площадка ;
			Док.Фирма = Док.ДокОснование.Фирма;
			Док.ЮрЛицо = Док.ДокОснование.ЮрЛицо;
			Док.Автор = ГМ.ПолучитьАвтора();
			Док.НоваяСтрока();
			Док.ТочкаМаршрутаUUID = тзИзменения.ТочкаМаршрутаUUID;
			Док.SequenceNumber = тзИзменения.SequenceNumber;
			Док.transportType = тзИзменения.transportType;
			Док.vehicleNumber = тзИзменения.vehicleNumber;
			Док.containerNumber = тзИзменения.containerNumber;
			Док.trailerNumber = тзИзменения.trailerNumber;
			Док.wagonNumber = тзИзменения.wagonNumber;
			Док.shipName = тзИзменения.shipName;
			Док.flightNumber = тзИзменения.flightNumber;
			Док.ВСД_Док = тзИзменения.ВСД;
			Док.Записать();
			тзИзменения.ВСД2_ОбновитьТранспорт = Док.ТекущийДокумент();
		Исключение
			Сообщить("Ошибка создания документа");
			Сообщить(Описаниеошибки());
		КонецПопытки;
	КонецЦикла;

	тпИзменения.ОбновитьСтроки();
	
КонецПроцедуры

Процедура ОтправитьДокументыИзменения()
	
	ПоКнопкеЗаписать();
	тзИзменения.ВыбратьСтроки();
	Пока тзИзменения.ПолучитьСтроку() = 1 Цикл
		Если (ПустоеЗначение(тзИзменения.ВСД2_ОбновитьТранспорт)=0) и (тзИзменения.ВСД2_ОбновитьТранспорт.Проведен()=0) Тогда
			ГМ2.Отправить_ОбновитьТранспортВМаршуртеДоставки( тзИзменения.ВСД2_ОбновитьТранспорт );
			тзИзменения.Статус = тзИзменения.ВСД2_ОбновитьТранспорт.Статус;
		КонецЕсли;
	КонецЦикла;
	
	тпИзменения.ОбновитьСтроки();
	
КонецПроцедуры


//Процедура ЗаполнитьТЗдляОбновленияМаршрута()
//		
//	//Получаем ТЗ с uuid маршрута и проставленным номером ТС из  Результрующих ВСД
//	тзИзменения.УдалитьСтроки();
//	тзВСД = ГМ.Выбрать_ВСД( Конт.ТекущийДокумент() );
//	тзВСД.ВыбратьСтроки();
//	Пока тзВСД.ПолучитьСтроку()=1 Цикл
//		ВСД = тзВСД.Док;
//		Если ПустаяСтрока(ВСД.ИмяФайлаМаршрутДоставки) = 0 Тогда
//			ВремТЗ = ЗначениеИзФайла(ВСД.ИмяФайлаМаршрутДоставки);
//			Если ТипЗначенияСтр(ВремТЗ) = "ТаблицаЗначений" Тогда
//				ВремТЗ.ВыбратьСтроки();
//				Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
//					// в таблицу добаляем только изменения, которые нужно отправить
//					Если (Строка(ВремТЗ.номерАвто) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерАвто"))) или
//						(Строка(ВремТЗ.номерКонтейнера) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерКонтейнера"))) или
//						(Строка(ВремТЗ.номерПрицепа) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерПрицепа"))) или
//						(Строка(ВремТЗ.номерВагона) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерВагона"))) или
//						(Строка(ВремТЗ.НазваниеСудна) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НазваниеСудна"))) или
//						(Строка(ВремТЗ.НомерАвиарейса) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НомерАвиарейса"))) Тогда
//
//						тзИзменения.НоваяСтрока();
//						тзИзменения.ТочкаМаршрутаUUID = ВремТЗ.UUID;
//						тзИзменения.SequenceNumber = ВремТЗ.НомерТочки;
//						тзИзменения.transportType = ВремТЗ.ТипТранспорта;
//						тзИзменения.ВСД = ВСД;
////						Если Строка(ВремТЗ.номерАвто) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерАвто")) Тогда
//							тзИзменения.vehicleNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерАвто"));
////						КонецЕсли;
////						Если Строка(ВремТЗ.номерКонтейнера) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерКонтейнера")) Тогда
//							тзИзменения.containerNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерКонтейнера"));
////						КонецЕсли;
////						Если Строка(ВремТЗ.номерПрицепа) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерПрицепа")) Тогда
//							тзИзменения.trailerNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерПрицепа"));
////						КонецЕсли;
////						Если Строка(ВремТЗ.номерВагона) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерВагона")) Тогда
//							тзИзменения.wagonNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерВагона"));
////						КонецЕсли;
////						Если Строка(ВремТЗ.НазваниеСудна) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НазваниеСудна")) Тогда
//							тзИзменения.shipName = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НазваниеСудна"));
////						КонецЕсли;
////						Если Строка(ВремТЗ.НомерАвиарейса) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НомерАвиарейса")) Тогда
//							тзИзменения.flightNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НомерАвиарейса"));
////						КонецЕсли;
//					Иначе
//						Продолжить;
//					КонецЕсли;
//				КонецЦикла;
//			КонецЕсли;
//		КонецЕсли;
//	КонецЦикла;
//	//Если тзИзменения.КоличествоСтрок() > 0 Тогда
//	//	тзИзменения.ТекущаяСтрока(1);
//	//КонецЕсли;
//	
//    тпИзменения  = СоздатьОбъект("Меркурий.ТабличноеПоле.ТЗ");
//    тпИзменения.Инит( Сам(), "Изменения");
//    тпИзменения.ИмяНастройки = "тпТочкиПерегрузкиИзменения";
//    тпИзменения.УстановитьТЗ( тзИзменения );
//    тпИзменения.Показать();	
//	
//КонецПроцедуры

Процедура ЗаполнитьТЗдляОбновленияМаршрутаИзXML()
		
	//Получаем ТЗ с uuid маршрута и проставленным номером ТС из  Результрующих ВСД
	тзИзменения.УдалитьСтроки();
	
	тзВСД = ГМ.Выбрать_ВСД( ВыбДокКонтекст.ТекущийДокумент() );
	тзВСД.ВыбратьСтроки();
	Пока тзВСД.ПолучитьСтроку()=1 Цикл
		//ВСД = тзВСД.Док;
		Если ПустаяСтрока(тзВСД.Док.ИмяФайлаXML) = 0 Тогда
			
		    objDom=СоздатьОбъект("MSXML2.DOMDocument.6.0");
			objDom.load( тзВСД.Док.ИмяФайлаXML );	
		    objDom.setProperty("SelectionNamespaces", "
				|xmlns:bs='http://api.vetrf.ru/schema/cdm/base'
				|xmlns:merc='http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2'
				|xmlns:dt='http://api.vetrf.ru/schema/cdm/dictionary/v2'
				|xmlns:vd='http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2'
				|xmlns:default='http://www.w3.org/2001/XMLSchema'
				|xmlns:my='http://api.vetrf.ru/schema/cdm/application'
				|xmlns:soap='http://schemas.xmlsoap.org/soap/envelope/'
				|" );
				
			Попытка
					
				vetDocument = objDom.selectSingleNode("//*[local-name() = 'vetDocument']") ;
			Исключение
				ГМ.СообщитьОбОшибке("Не удалось загрузить ВСД из "+тзВСД.Док.ИмяФайлаXML+"
				|"+ОписаниеОшибки(), Контекст);
				Возврат;
			КонецПопытки;
			
			ВремТЗ = ГМ2.МаршрутСледования_из_XML(vetDocument.selectSingleNode("vd:certifiedConsignment").selectSingleNode("vd:shipmentRoute").selectNodes("vd:routePoint")); 
			
			Если ТипЗначенияСтр(ВремТЗ) = "ТаблицаЗначений" Тогда
				ВремТЗ.ВыбратьСтроки();
				Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
					// в таблицу добаляем только изменения, которые нужно отправить
					Если (Строка(ВремТЗ.номерАвто) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерАвто"))) или
						(Строка(ВремТЗ.номерКонтейнера) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерКонтейнера"))) или
						(Строка(ВремТЗ.номерПрицепа) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерПрицепа"))) или
						(Строка(ВремТЗ.номерВагона) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерВагона"))) или
						(Строка(ВремТЗ.НазваниеСудна) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НазваниеСудна"))) или
						(Строка(ВремТЗ.НомерАвиарейса) <> СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НомерАвиарейса"))) Тогда

						тзИзменения.НоваяСтрока();
						тзИзменения.ТочкаМаршрутаUUID = ВремТЗ.UUID;
						тзИзменения.SequenceNumber = ВремТЗ.НомерТочки;
						тзИзменения.transportType = ВремТЗ.ТипТранспорта;
						тзИзменения.ВСД = тзВСД.Док;
							тзИзменения.vehicleNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерАвто"));
							тзИзменения.containerNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерКонтейнера"));
							тзИзменения.trailerNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерПрицепа"));
							тзИзменения.wagonNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"номерВагона"));
							тзИзменения.shipName = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НазваниеСудна"));
							тзИзменения.flightNumber = СокрЛП(тзТочкиПерегрузки.ПолучитьЗначение(ВремТЗ.НомерТочки,"НомерАвиарейса"));
					Иначе
						Продолжить;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
    тпИзменения  = СоздатьОбъект("Меркурий.ТабличноеПоле.ТЗ");
    тпИзменения.Инит( Сам(), "Изменения");
    тпИзменения.ИмяНастройки = "тпТочкиПерегрузкиИзменения";
    тпИзменения.УстановитьТЗ( тзИзменения );
    тпИзменения.Показать();	
	
КонецПроцедуры

Процедура ИзмененияВыбор()

	ГМ.ПриАктивизацииСтрокиТП( тпИзменения, тзИзменения);
	ГМ.ПриАктивизацииКолонкиТП( тпИзменения, тзИзменения);
	
	текСтр=тзИзменения.ТекущаяСтрока();
	Если текСтр=0 Тогда Возврат; КонецЕсли;
	текКол = тзИзменения.ТекущаяКолонка();
	
	Эл = тзИзменения.ПолучитьЗначение(текСтр, текКол);
	ОткрытьФорму(Эл);
	
КонецПроцедуры

Процедура ДокументыВыбор()

	ГМ.ПриАктивизацииСтрокиТП( тпДокументы, тзДокументы);
	ГМ.ПриАктивизацииКолонкиТП( тпДокументы, тзДокументы);
	
	текСтр=тзДокументы.ТекущаяСтрока();
	Если текСтр=0 Тогда Возврат; КонецЕсли;
	текКол = тзДокументы.ТекущаяКолонка();
	
	Док = тзДокументы.ПолучитьЗначение(текСтр, "Док");
	тзМаршрутДоставки = ЗначениеИзФайла( Док.ИмяФайлаМаршрутДоставки );
	Если ТипЗначенияСтр(тзМаршрутДоставки) = "ТаблицаЗначений" Тогда
		тзМаршрутДоставки.ВыбратьСтроку();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументыПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		
		ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Маршрут");
		ОбъектЯчейка.УстановитьТекст( СокрЛП( ДанныеСтроки.Док.ИмяФайлаМаршрутДоставки ) );
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Форма.ИспользоватьСлой(ЗначениеЗакладки);
	
	Если НомерЗакладки=2 Тогда 		
		//ЗаполнитьТЗдляОбновленияМаршрута();
		ЗаполнитьТЗдляОбновленияМаршрутаИзXML();				
	КонецЕсли;
	
	Форма.Закладки.ТекущаяСтрока(НомерЗакладки);
КонецПроцедуры

Процедура ЗагрузитьГорода_НасПункты()
	Если Район.Выбран() = 0 Тогда
	    ГМ2.ИнициализацияХС_ЗагрузитьГорода(Регион);
	Иначе
		ГМ2.ИнициализацияХС_ЗагрузитьНаселенныеПунктыПоРайону(Район);
	КонецЕсли;
КонецПроцедуры

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	оПривязки.ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

Процедура ПриЗакрытии()
	
    тпТочкиПерегрузки.СохранитьНастройки();
	
КонецПроцедуры

тзИзменения = СоздатьОбъект("ТаблицаЗначений");
тзИзменения.НоваяКолонка("ТочкаМаршрутаUUID",,,,,30,);
тзИзменения.НоваяКолонка("SequenceNumber","Число",3,0,"Номер точки",5);
тзИзменения.НоваяКолонка("transportType","Число",2,0,"Тип транспорта",5);
тзИзменения.НоваяКолонка("vehicleNumber","Строка",50,,"Авто",5);
тзИзменения.НоваяКолонка("containerNumber","Строка",50,,"Контейнер",5);
тзИзменения.НоваяКолонка("trailerNumber","Строка",50,,"Прицеп",5);
тзИзменения.НоваяКолонка("wagonNumber","Строка",50,,"Вагон",5);
тзИзменения.НоваяКолонка("shipName","Строка",50,,"Судно",5);
тзИзменения.НоваяКолонка("flightNumber","Строка",50,,"Авиа",5);
тзИзменения.НоваяКолонка("ВСД",,10,,"ВСД",10);
тзИзменения.НоваяКолонка("ВСД2_ОбновитьТранспорт","Документ.ВСД2_ОбновитьТранспорт",10,,"ВСД2_ОбновитьТранспорт",20);
тзИзменения.НоваяКолонка("Статус","Строка",10,,,20);     // Сюда будем писать Статус Отправки Док ВСД2_ОбновитьТранспорт

тзДокументы = СоздатьОбъект("ТаблицаЗначений");
тзДокументы.НоваяКолонка("Док",,,,"Документ",50);
тзДокументы.НоваяКолонка("Маршрут",,,,"Маршрут движения",50);
