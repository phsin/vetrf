
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагПродолжения)

	Если ЭлементДиалога = "Регион" Тогда
		ВремЭлем = Страна;
		ОткрытьФорму("Справочник.ВСД_Регион",);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Район" Тогда
		ВремЭлем = Регион;
		ОткрытьФорму("Справочник.ВСД_Район",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Город" Тогда
		ВремЭлем = Регион;
		Если ПустоеЗначение(Район)=0 Тогда
			ВремЭлем = Район;
		ИначеЕсли ПустоеЗначение(Регион)=0 Тогда
			ВремЭлем = Регион;
		Иначе	
			Сообщить("Выберите район или регион");
		КонецЕсли;
			
		ОткрытьФорму("Справочник.ВСД_Город",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Улица" Тогда
		ВремЭлем = Город;
		Если ПустоеЗначение(Город)=0 Тогда
			ВремЭлем = Город;
		ИначеЕсли ПустоеЗначение(Район)=0 Тогда
			ВремЭлем = Район;
		ИначеЕсли ПустоеЗначение(Регион)=0 Тогда
			ВремЭлем = Регион;
		Иначе	
			Сообщить("Выберите город, район или регион");
		КонецЕсли;
		
		ОткрытьФорму("Справочник.ВСД_Улица",ВремЭлем);
		ФлагПродолжения = 0;
	КонецЕсли;

КонецПроцедуры

Процедура ПриВыбореХС( ХС )
	ИНН = ГМ.ПолучитьИНН(ХС.Контрагент);
	КПП = ГМ.ПолучитьКПП(ХС.Контрагент);
	ОГРН = ГМ.ПолучитьОГРН(ХС);
	Адрес = ГМ.ПолучитьЮрАдрес(ХС.Контрагент);
	ПолноеНаименование = ГМ.ПолучитьНаименованиеКлиента(ХС.Контрагент);

	Если ПустоеЗначение(ИНН)=1 Тогда
		Сообщить("Неправильно указан ИНН","!");
	КонецЕсли;
	Если ПустоеЗначение(ОГРН)=1 Тогда
		Сообщить("Не указан ОГРН","!");
	КонецЕсли;

КонецПроцедуры

// при открытии формы обработки запоминаем переданные параметры,
// после чего закрываем форму документа (ставится "в очередь")
Процедура ПриОткрытии()
	Причина = "Причина добавления субъекта в реестр.";

	ГМ.Инициализация(Контекст);

   	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
      	//ГМ = Форма.Параметр.Получить("ГМ");
	  	ВыбХС = Форма.Параметр.Получить("ХС");
	  	ПриВыбореХС( ВыбХС );
	  	//ГМ.ЗагрузитьПараметрыВФорму(Контекст);
	Иначе	
   		ГМ.ЗагрузитьПараметрыВФорму(Контекст);
      //СтатусВозврата(0);
	КонецЕсли;


КонецПроцедуры // ПриОткрытии


Функция Создать_ХС_ЗапросXML()
	ответ ="
   |<SOAP-ENV:Envelope xmlns:dt='http://api.vetrf.ru/schema/cdm/dictionary/v2' 
   |xmlns:bs='http://api.vetrf.ru/schema/cdm/base' 
   |xmlns:merc='http://api.vetrf.ru/schema/cdm/mercury/g2b/applications/v2' 
   |xmlns:apldef='http://api.vetrf.ru/schema/cdm/application/ws-definitions' 
   |xmlns:apl='http://api.vetrf.ru/schema/cdm/application' 
   |xmlns:vd='http://api.vetrf.ru/schema/cdm/mercury/vet-document/v2' 
   |xmlns:SOAP-ENV='http://schemas.xmlsoap.org/soap/envelope/'>
   |   <SOAP-ENV:Header/>
   |   <SOAP-ENV:Body>
   |      <apldef:submitApplicationRequest>
   |         <apldef:apiKey>"+ ГМ.СписокКонстант.Получить("param_api_key") + "</apldef:apiKey>
   |         <apl:application>
   |            <apl:serviceId>mercury-g2b.service</apl:serviceId>
   |            <apl:issuerId>"+ ГМ.СписокКонстант.Получить("param_issuer_id")+"</apl:issuerId>
   |            <apl:issueDate>"+ ГМ.Преобразовать_Дата_в_Строка(ТекущаяДата(), "T00:00:00") +"</apl:issueDate>
   |            <apl:data>
	|      <merc:modifyBusinessEntityRequest>
	|        <merc:localTransactionId>[GUID]</merc:localTransactionId>
	|        <merc:initiator>
	|          <vd:login>"+ ГМ.СписокКонстант.Получить("param_intiator_login")+"</vd:login>
	|        </merc:initiator>
	|        <merc:modificationOperation>
	|          <vd:type>FIND_OR_CREATE</vd:type>
	|          <vd:affectedList count='0' total='0' offset='0' />
	|          <vd:resultingList count='1' total='1' offset='0'>
	|";

	Если СтрДлина( СокрЛП(ИНН) ) = 12 Тогда
		// ИП = физ лицо
		ответ = ответ + "
		|  <dt:businessEntity>
        |  <dt:type>2</dt:type>
		|    <dt:fio>"+ СокрЛП(ПолноеНаименование) +"</dt:fio>
		|    <dt:inn>" + СокрЛП(ИНН) +"</dt:inn>
		|    <dt:ogrn>" + СокрЛП(ОГРН) +"</dt:ogrn>
		|";

	Иначе  //Юр лицо ООО
		ответ = ответ + "
		|            <dt:businessEntity>
		|              <dt:type>1</dt:type>
		|              <dt:name>"+ СокрЛП(ПолноеНаименование) +"</dt:name>
		|              <dt:incorporationForm>
		|                <dt:code>12300</dt:code>
		|              </dt:incorporationForm>
		|              <dt:fullName>"+ СокрЛП(ПолноеНаименование) +"</dt:fullName>
		|              <dt:inn>" + СокрЛП(ИНН) +"</dt:inn>
		|              <dt:kpp>" + СокрЛП(КПП) +"</dt:kpp>
		|              <dt:ogrn>" + СокрЛП(ОГРН) +"</dt:ogrn>
		|";
	КонецЕсли;

	ответ=ответ+"
		|              <dt:juridicalAddress>
		|                <dt:country>
		|                  <bs:guid>"+ СокрЛП(Страна.GUID) +"</bs:guid>
		|                </dt:country>
		|                <dt:region>
		|                  <bs:guid>"+ СокрЛП(Регион.GUID) +"</bs:guid>
		|                </dt:region> ";
		Если ПустоеЗначение(Район)=0 Тогда 
			ответ=ответ+"
			|                <dt:district>
			|                  <bs:guid>"+ СокрЛП(Район.GUID) +"</bs:guid>
			|                </dt:district> ";
		Иначе
			ответ=ответ+"
			|                <dt:district /> ";
		КонецЕсли;
		ответ=ответ+"
		|                <dt:locality>
		|                  <bs:guid>"+ СокрЛП(Город.GUID) +"</bs:guid>
		|                </dt:locality>
		|                <dt:subLocality />
		|";
;
	Если ПустоеЗначение(Улица.GUID)=0 Тогда
		Ответ=Ответ+"
		|                <dt:street>
		|                   <bs:guid>"+ СокрЛП(Улица.GUID) +"</bs:guid>
		|                </dt:street>
		|";
	Иначе
			Ответ=Ответ+"  <dt:street /> ";
	КонецЕсли;
	Ответ=Ответ+"
	|                <dt:addressView>" + СокрЛП(Адрес) +"</dt:addressView>
	|              </dt:juridicalAddress>
	|            </dt:businessEntity>
	|          </vd:resultingList>
	|          <vd:reason>"+ СокрЛП(Причина) +"</vd:reason>
	|        </merc:modificationOperation>
	|      </merc:modifyBusinessEntityRequest>
   |          </apl:data>
   |         </apl:application>
   |      </apldef:submitApplicationRequest>
   |   </SOAP-ENV:Body>
   |</SOAP-ENV:Envelope>
   |";

	Возврат ответ;
КонецФункции

Процедура Создать_ХС_Результат( applicationID, ХС)

	Если ПустоеЗначение(applicationID)=1 Тогда
		Сообщить("Не указано applicationID");
		Возврат;
	КонецЕсли;

	//Сообщить(" Запрос CreateBusinessEntityResult [ "+СокрЛП(applicationID)+" ]","i");
	//Результат = ГМ.Компонента.CreateBusinessEntityResult( СокрЛП(applicationID));
	//Отладка();

	Сообщить("Отправляем запрос результата ["+applicationID+"] " );
	//Результат = Компонента.SendRequestResult( applicationID );
	Результат = ГМ.ПолучитьРезультатСервер( applicationID );


    Сообщить("Загрузка XML-файла: "+ГМ.Компонента.LogFilename);
    objDom=СоздатьОбъект("MSXML2.DOMDocument");
    objDom.load(ГМ.Компонента.LogFilename);

	Если ГМ.НайтиОшибки()>0 Тогда
		Возврат;
	КонецЕсли;

    enterprise=objDom.selectSingleNode("//merc:businessEntity") ;
	guid = enterprise.selectSingleNode("bs:guid").text;
	uuid = enterprise.selectSingleNode("bs:uuid").text;
	active = enterprise.selectSingleNode("bs:active").text;

	если ПустоеЗначение(GUID)=0 Тогда
		Спр = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
		Спр.НайтиЭлемент(ХС);
		спр.GUID = GUID;
		спр.Записать();
		Сообщить("Успешно записан ВСД_ХозСубъект ["+Спр.ТекущийЭлемент()+"] GUID = "+GUID,"i");
	Иначе
		Сообщить("Пустой GUID ХозСубъекта");
	КонецЕсли;

	ГМ.УдалитьXML( ГМ.Компонента.LogFilename );
КонецПроцедуры

Функция ХС_Создать(ХС)
	ЗапросXML = Создать_ХС_ЗапросXML(  );

	метод = ГМ.Компонента.GetMethod();
    метод.Service = "platform/services/2.0/ApplicationManagementService";
    метод.Action = "submitApplicationRequest";

	//appID = ГМ.ОтправитьЗапросXML(ЗапросXML);
	appID = ГМ.ОтправитьЗапросSoap(ЗапросXML, метод);

	ГМ.Пауза();
	Создать_ХС_Результат(appID, ХС);

	Возврат appID;
КонецФункции

Процедура НайтиОГРН()
	ЗапуститьПриложение("https://egrul.nalog.ru/");
КонецПроцедуры

Процедура ЗагрузитьГорода_НасПункты()
	Если Район.Выбран() = 0 Тогда
	    ГМ.ИнициализацияХС_ЗагрузитьГорода(Регион);
	Иначе
		ГМ.ИнициализацияХС_ЗагрузитьНаселенныеПунктыПоРайону(Район);
	КонецЕсли;
КонецПроцедуры

Процедура ЗагрузитьУлицы()
	Если ПустоеЗначение(Город)=0 Тогда
		ГМ.ИнициализацияХС_ЗагрузитьУлицы(  Город, 0 );
	ИначеЕсли ПустоеЗначение(Район)=0 Тогда
		ГМ.ИнициализацияХС_ЗагрузитьУлицы(  Район, 0 );
	ИначеЕсли ПустоеЗначение(Регион)=0 Тогда
		ГМ.ИнициализацияХС_ЗагрузитьУлицы(  Регион, 0 );
	Иначе
		Сообщить("Выберите город");
	КонецЕсли;

КонецПроцедуры