////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
// 
Перем Отправитель_ХозСубъект, Отправитель_Площадка, ДокОснование;
Перем ТаблПоле, ТЗЭлементы, ТаблПодбора, ТЗПодбора;

Перем КонтекстВызывающего; 	// Входной Параметр - Контекст ВСД2_транзакция
Перем тзРезультирующая; 	// переносимая в тч документа результирующая таблица  
Перем оПривязки; 			//:Меркурий.Привязки
Перем ПарамФП; //[+]serpent, 22.08.2019

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//                          
Процедура ПодобратьПартии() Далее //[+]serpent, 31.05.2019

//******************************************************************************
//  глФРМКоличество(Знач ЧислЗнач,Единица="", РаздТриад=" ") 
//
// Параметры:
//  ЧислЗнач  - число, которое мы хотим форматировать,
//  Единица   - единица измерения,
//	РаздТриад - разделитель триад, по умолчанию - пробел.
//
// Возвращаемое значение: 
//  Отформатированная строка
//
// Описание:
//  Это процедура стандартного для данной конфигурации форматирования количества.
//
Функция глФРМКоличество(Знач ЧислЗнач,Единица="", РаздТриад=" ", Коэфф = 0, Точность = 3) Экспорт

	Если ПустоеЗначение(Единица)=0 Тогда
		Если Коэфф = 0 Тогда
			Если ТипЗначенияСтр(Единица) = "Справочник" Тогда
				ЧислЗнач = ?(Единица.Коэффициент=0,0,ЧислЗнач / Единица.Коэффициент);
			КонецЕсли;
		Иначе
			ЧислЗнач = ЧислЗнач / Коэфф;
		КонецЕсли;
	КонецЕсли;
	Стр=СокрЛ(Формат(ЧислЗнач,"Ч015."+Точность+"." +  РаздТриад));
	Возврат Стр;

КонецФункции //глФРМКоличество() 

//******************************************************************************
// при другом названии Реквизита Номенклатура в конфигурации
Процедура ИзменитьИдентКолонкиТЗ(ТЗ,Идент,НовыйИдент)
     ЗначениеИзСтрокиВнутр(СтрЗаменить(ЗначениеВСтрокуВнутр(ТЗ),"},"+Симв(10)+"{"""+Идент+"""","},"+Симв(10)+"{"""+НовыйИдент+""""),ТЗ);
КонецПроцедуры

//******************************************************************************
Процедура СкопироватьСтрокуВТЗ(ТзРез, ТзИсточник)
	ТзРез.НоваяСтрока();
	ТзРез.Номенклатура = ТзИсточник.Номенклатура;
	ТзРез.Продукция_Элемент = ТзИсточник.Продукция_Элемент;
	ТзРез.Количество = ТзИсточник.Количество;
	
	Попытка 
		
		Если ГМ.ПроверитьВозможностьИспользованияПартии(ТзИсточник.Партия) = 0 Тогда
			Возврат;
		КонецЕсли;
		
		// Расходная накладная
		ТзРез.Партия = ТзИсточник.Партия;
		ТзРез.НомерПартии = СокрЛП(ТзРез.Партия.НомерПартии);
		ТзРез.Изготовлено = ТзРез.Партия.ДатаИзготовления1;
		ТзРез.СрокГодности = ТзРез.Партия.ДатаСрокГодности1;
		ТзРез.ЕдиницаИзмерения = ТзРез.Партия.ЕдиницаИзмерения;
		ТзРез.Остаток = ТзРез.Партия.Количество;
	Исключение КонецПопытки; 
	
	// С местами и упаковками нужно отдельно поразбираться
	//ТзРез.КоличествоМест = ТзИсточник.КоличествоМест; // нужно считать, и возможно по неск уровням
КонецПроцедуры

//******************************************************************************
// Обработка связанных ТЗ
Процедура ДобавитьВыбранноеВРезультат(ВыбПодбор)
	ВыбПодбор.ВыбратьСтроки();
	Пока ВыбПодбор.ПолучитьСтроку() = 1 Цикл
		СкопироватьСтрокуВТЗ(ТЗРезультирующая, ВыбПодбор);
	КонецЦикла;
КонецПроцедуры

//******************************************************************************
Процедура ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ВыбНоменклатура, ВыбПродукцияЭлемент)
	ТЗПодбора.УдалитьСтроки();
	ТЗРезультирующая.Сортировать("+Номенклатура,Продукция_Элемент");
	
	СЦ = ТЗРезультирующая.КоличествоСтрок();
	Пока СЦ > 0 Цикл
		Если (тзРезультирующая.ПолучитьЗначение(СЦ,"Номенклатура") = ВыбНоменклатура) И 
				(тзРезультирующая.ПолучитьЗначение(СЦ,"Продукция_Элемент") = ВыбПродукцияЭлемент) Тогда
					
			ТЗРезультирующая.ПолучитьСтрокуПоНомеру(СЦ);
			Если ПустоеЗначение(ТЗРезультирующая.Партия) = 0 Тогда
				СкопироватьСтрокуВТЗ(ТЗПодбора, ТЗРезультирующая);
			КонецЕсли;
	
			ТЗРезультирующая.УдалитьСтроку(СЦ);
		КонецЕсли;
		СЦ = СЦ - 1;
	КонецЦикла;
	
//	стр = 0;
//	Пока ТЗРезультирующая.НайтиЗначение(ВыбПродукцияЭлемент,стр,"Продукция_Элемент") = 1 Цикл  
//		
//		ТЗРезультирующая.ПолучитьСтрокуПоНомеру(стр);
//		Если ПустоеЗначение(ТЗРезультирующая.Партия) = 0 Тогда
//			СкопироватьСтрокуВТЗ(ТЗПодбора, ТЗРезультирующая);
//		КонецЕсли;
//
//		ТЗРезультирующая.УдалитьСтроку(стр);
//		стр = 0;
//	КонецЦикла; 
	Попытка
		ТаблПодбора.ОбновитьСтроки();
	Исключение
	КонецПопытки;
КонецПроцедуры
     
//******************************************************************************
Процедура ОбновитьЭлементыФормы()  
	Форма.ТекстКоличество.Заголовок(глФРМКоличество(ТЗЭлементы.Количество));
	Форма.ТекстПодобрано.Заголовок(глФРМКоличество(ТЗПодбора.Итог("Количество")));
	Форма.ТекстОстаток.Заголовок(глФРМКоличество(ТЗЭлементы.Недостача));

	Попытка ТаблПоле.ОбновитьСтроки(); Исключение КонецПопытки;
	Попытка ТаблПодбора.ОбновитьСтроки(); Исключение КонецПопытки;
КонецПроцедуры

//******************************************************************************
Процедура ТаблПолеПриАктивизацииСтроки(ТабличноеПоле)
	                           
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, ТЗЭлементы);
	Если ПустоеЗначение(ТабличноеПоле.ТекущаяСтрока) = 1  Тогда
		Возврат;
	КонецЕсли;

	ДобавитьВыбранноеВРезультат(ТЗПодбора);
	ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ТЗЭлементы.Номенклатура, ТЗЭлементы.Продукция_Элемент);

	ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу 
	ТЗЭлементы.Остаток = ТЗПодбора.Итог("Остаток"); // Запишем в 1 таблицу 
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

////******************************************************************************
//Процедура ТаблПодбораПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
//	ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Остаток");
//	ОбъектЯчейка.УстановитьТекст(глФРМКоличество(ДанныеСтроки.Партия.Количество));//Желтый
////	ОбъектЯчейка.ЦветФона=8454143;//Желтый
//КонецПроцедуры

//******************************************************************************
Процедура ТаблПодбораВыбор(ТабличноеПоле, __стр, Колонка, ТипРегиона)
	Если ТипРегиона =3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, ТЗПодбора);

		КодКолонки = Колонка.Данные;
		Если КодКолонки = "Количество" Тогда
			_знач = ТЗПодбора.ПолучитьЗначение(__стр, КодКолонки);
			ТабличноеПоле.РедактироватьЗначение(__стр, Колонка, ТипРегиона, _знач,14,3, "ВыбЗнач", "0x100000");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// ТаблПолеВыбор()
//
// Параметры: 
//  
//
// Возвращаемое значение:
//  Нет
//
// Описание:
// [+]serpent, 31.05.2019
//
Процедура ТаблПолеВыбор(ТабличноеПоле, __стр, Колонка, ТипРегиона)
	
	Если ТипРегиона =3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, ТЗЭлементы);

		КодКолонки = Колонка.Данные;
		//Если КодКолонки = "Количество" Тогда
			_значО = ТЗЭлементы.ПолучитьЗначение(__стр, "Недостача");
			//_знач  = ТЗЭлементы.ПолучитьЗначение(__стр, КодКолонки);
			Если Число(_значО) > 0 Тогда
				//Сообщить(_знач);
				ПодобратьПартии();
			Иначе
				Предупреждение("Партия подобрана ПОЛНОСТЬЮ",10);	
			КонецЕсли;
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ТаблПолеВыбор()

//******************************************************************************
Процедура ТаблПодбораПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
	ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("СрокГодности");
	ОбъектЯчейка.УстановитьТекст(ГМ.Преобразовать_СтрокаДата_в_ФормализованнаяДата( ДанныеСтроки.СрокГодности));
	ОбъектЯчейка=ОформлениеСтроки.Ячейки.Получить("Изготовлено");
	ОбъектЯчейка.УстановитьТекст(ГМ.Преобразовать_СтрокаДата_в_ФормализованнаяДата( ДанныеСтроки.Изготовлено));
КонецПроцедуры

//******************************************************************************
Процедура ТаблПодбораПриРедактированииЗначения(ТабличноеПоле, __стр, Колонка, ТипРегиона, __знач)
	Если ТипРегиона = 3 Тогда
		КодКолонки = Колонка.Данные;

		КолВПартии = ТЗПодбора.Партия.Количество;
		Если __знач > КолВПартии Тогда
			Сообщить("В Партии всего "+КолВПартии,"!");
			__знач = КолВПартии;
		КонецЕсли;
		ТЗПодбора.УстановитьЗначение(__стр, КодКолонки, __знач);

		Если (ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество")) < 0 Тогда
			ТЗПодбора.Количество = ТЗПодбора.Количество + ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество");
		КонецЕсли;
		ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
		
		ОбновитьЭлементыФормы();
	КонецЕсли;	
КонецПроцедуры

//******************************************************************************
Процедура ТаблПолеПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
	Если ДанныеСтроки.Остаток < ДанныеСтроки.Количество Тогда
		ОформлениеСтроки.ЦветФона= 8454143;		// Желтый   
	Иначе
		Если ДанныеСтроки.Недостача > 0 Тогда
			ОформлениеСтроки.ЦветТекста = 255;		// Красный
		Иначе
			//ОформлениеСтроки.ЦветТекста = 32768;	// Зеленый
		КонецЕсли;   
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура УдалитьТекСтроку(ТекСтрокаТЗ)
	ГМ.ПриАктивизацииСтрокиТП(ТаблПоле, ТЗЭлементы);
	ГМ.ПриАктивизацииСтрокиТП(ТаблПодбора, ТЗПодбора); 
	
	Если ТЗПодбора.ТекущаяСтрока() = 0 Тогда Возврат;
	КонецЕсли;                    
	
	ТЗПодбора.УдалитьСтроку(ТЗПодбора.ТекущаяСтрока());
	ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу

	ОбновитьЭлементыФормы();
КонецПроцедуры

//******************************************************************************
// ОчиститьВесьПодбор()
//
// Параметры: 
//  
//
// Возвращаемое значение:
//  Нет
//
// Описание:
//  ТекстОписания
// [+]serpent, 31.05.2019
Процедура ОчиститьВесьПодбор()
	
	ТЗПодбора.УдалитьСтроки();
	тзРезультирующая.УдалитьСтроки();
	
	ТЗЭлементы.ВыбратьСтроки();
	Пока ТЗЭлементы.ПолучитьСтроку() = 1 Цикл
		ТЗЭлементы.Недостача = ТЗЭлементы.Количество;
		ТЗЭлементы.Остаток = 0;
	КонецЦикла;
	
	ОбновитьЭлементыФормы();
КонецПроцедуры // ОчиститьВесьПодбор()

//******************************************************************************
Процедура ТзПодбораУдалитьСтроки()
	ГМ.ПриАктивизацииСтрокиТП(ТаблПоле, ТЗЭлементы);

	ТЗПодбора.УдалитьСтроки();
	ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
	ТЗЭлементы.Остаток = ТЗПодбора.Итог("Остаток"); // Запишем в 1 таблицу

	ОбновитьЭлементыФормы();
КонецПроцедуры

//******************************************************************************
Процедура ПодобратьПартии()
	ГМ.ПриАктивизацииСтрокиТП(ТаблПоле, ТЗЭлементы);
	ГМ.ПриАктивизацииСтрокиТП(ТаблПодбора, ТЗПодбора); 

	Если ТЗЭлементы.ТекущаяСтрока() = 0 Тогда Возврат;
	КонецЕсли;           
	
	Если ТЗПодбора.Итог("Количество") > ТЗЭлементы.Остаток Тогда
		ТЗПодбора.ВыбратьСтроки();
		Пока ТЗПодбора.ПолучитьСтроку() = 1 Цикл
			ТЗПодбора.Количество = Мин(ТЗПодбора.Количество, ТЗПодбора.Остаток);
		КонецЦикла;  
		ОбновитьЭлементыФормы();
	КонецЕсли;
	
	ПодобраноКол = ТЗПодбора.Итог("Количество");
	НужноВсего = ТЗЭлементы.Количество;
	ОсталосьПодобрать = НужноВсего - ПодобраноКол;

	Если (ОсталосьПодобрать <= 0) И (ТЗПодбора.Итог("Остаток")>=ТЗЭлементы.Количество) Тогда
	    Предупреждение("Достаточно"); Возврат;
	КонецЕсли;

	// перечитаем таблицы - м.б. сменилась позиция ТЗЭлементы
	ДобавитьВыбранноеВРезультат(ТЗПодбора);
	ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ТЗЭлементы.Номенклатура, ТЗЭлементы.Продукция_Элемент);

	ПарамФП = СоздатьОбъект("СписокЗначений");
	ПарамФП.Установить("ВСД_Продукция_Элемент",ТЗЭлементы.Продукция_Элемент);
    ПарамФП.Установить("Площадка",Отправитель_Площадка);
	ПарамФП.Установить("ХозСубъект",Отправитель_ХозСубъект);
	
	ОткрытьПодбор("Справочник.ВСД_Партия", "ФормаСписка",ПарамФП,1); //[+]serpent, 22.08.2019
КонецПроцедуры

//******************************************************************************
Процедура ОбработкаПодбора(ВыбЭлемент,КФ)
	Если ПустоеЗначение(Выбэлемент) = 1 Тогда Возврат;
	КонецЕсли;
	
	Если ГМ.ПроверитьВозможностьИспользованияПартии(ВыбЭлемент) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	стр = 0;
	Если ТЗПодбора.НайтиЗначение(ВыбЭлемент,стр,"Партия")>0 Тогда
		ТЗПодбора.ТекущаяСтрока(стр);
		Предупреждение("Партия уже выбрана !"); Возврат;
	КонецЕсли;                                
	
    //Проконтролируем еще и наличие партии в Результирующей таблицы
	стр = 0;
	Если ТЗРезультирующая.НайтиЗначение(ВыбЭлемент,стр,"Партия")>0 Тогда
		Предупреждение("Партия уже выбрана!"); Возврат;
	КонецЕсли;                                  
	
	ПодобраноКол = ТЗПодбора.Итог("Количество");

	НужноВсего = ТЗЭлементы.Количество;
	ОсталосьПодобрать = НужноВсего - ПодобраноКол;

	Если ОсталосьПодобрать <= 0 Тогда
	    Предупреждение("Достаточно"); Возврат;
	КонецЕсли;

	Если ВыбЭлемент.Количество <= ОсталосьПодобрать Тогда
	    КолКподбору = ВыбЭлемент.Количество;
	Иначе
		КолКподбору = Мин(ВыбЭлемент.Количество,ОсталосьПодобрать);
	КонецЕсли;            
	
	Если ВвестиЧисло(КолКподбору,"Укажите количество",14,3) = 0 Тогда Возврат;
	КонецЕсли;

	КолКподбору = Мин(КолКподбору,ВыбЭлемент.Количество,ОсталосьПодобрать);

	ТЗПодбора.НоваяСтрока();
	ТЗПодбора.Номенклатура = ТЗЭлементы.Номенклатура;
	ТЗПодбора.Продукция_Элемент = ТЗЭлементы.Продукция_Элемент;
	ТЗПодбора.Партия = ВыбЭлемент;
	ТЗПодбора.НомерПартии = СокрЛП(ВыбЭлемент.НомерПартии);
	ТЗПодбора.Изготовлено = ВыбЭлемент.ДатаИзготовления1;
	ТЗПодбора.СрокГодности = ВыбЭлемент.ДатаСрокГодности1;
	ТЗПодбора.Количество = КолКподбору;
	ТЗПодбора.Остаток = ВыбЭлемент.Количество;
	//ТЗПодбора.КоличествоМест = 0;

	ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
	ТЗЭлементы.Остаток = ТЗПодбора.Итог("Остаток"); // Запишем в 1 таблицу

	ОбновитьЭлементыФормы();
	
	Если ТЗПодбора.Итог("Количество") = ТЗЭлементы.Количество Тогда //[+]serpent, 22.08.2019
		Если ТипЗначения(ПарамФП)=100 Тогда//Форма открыта
			ПарамФП.Форма.Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//******************************************************************************
// Заполняет данными из документа при открытии обработки или интерактивно
Процедура ЗаполнитьТЗЭлементов(Док)    
	
	ТЗЭлементы.УдалитьСтроки();
	ТЗПодбора.УдалитьСтроки();	
	тзРезультирующая.УдалитьСтроки();
	
	тз = СоздатьОбъект("ТаблицаЗначений");
	Док.ВыгрузитьТабличнуюЧасть(тз);
    
	Если НЕ(Док.Вид() = "ВСД2_транзакция") Тогда
	    Если НЕ(ГМ.НазваниеРеквизитаНоменклатура() = "Номенклатура") Тогда // в нестандартной конфе ->
	    	ИзменитьИдентКолонкиТЗ(тз,ГМ.НазваниеРеквизитаНоменклатура(),"Номенклатура");
		КонецЕсли;         
		ТЗ.НоваяКолонка("Продукция_Элемент","Справочник.ВСД_Продукция_Элемент",  , ,"Продукция_Элемент",20);
	КонецЕсли;
                      
	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл                    
		
		//[-]serpent, 17.05.2019
		Список_ВСДПродукцияЭлемент = ГМ.ПолучитьСписок_ВСДПродукцияЭлемент_По_Номенклатура(тз.Номенклатура); 
		Если Список_ВСДПродукцияЭлемент.КоличествоСтрок() > 0 Тогда
			Продукция_Элемент = Список_ВСДПродукцияЭлемент.ПолучитьЗначение(1,1);
		КонецЕсли;
		Если ПустоеЗначение(Продукция_Элемент) = 1 Тогда Продолжить;
		КонецЕсли;
		//[-]_
			
		////[+]serpent, 17.05.2019
		//Продукция_Элемент = тз.Номенклатура.ВСД_Продукция_Элемент;
		//Если ПустоеЗначение(Продукция_Элемент) = 1 Тогда
		//	Попытка
		//		Продукция_Элемент = тз.Продукция_Элемент;
		//		Если ПустоеЗначение(Продукция_Элемент) = 1 Тогда
		//			Продолжить;
		//		КонецЕсли;
		//	Исключение
		//		Продолжить;
		//	КонецПопытки
		//КонецЕсли;
		////[+]_

		ТЗЭлементы.НоваяСтрока();
		ТЗЭлементы.Номенклатура = тз.Номенклатура;
		ТЗЭлементы.Продукция_Элемент = Продукция_Элемент;
		ТЗЭлементы.Количество = тз.Количество;

		ТЗ.Продукция_Элемент = Продукция_Элемент;

		//Сомнительный момент: в Результат нужно всегда писать
		СкопироватьСтрокуВТЗ(ТЗРезультирующая, тз);
	КонецЦикла;

    ТЗЭлементы.Свернуть("Номенклатура,Продукция_Элемент","Количество,Недостача,Остаток");

    // Подсчитаем недостачу
	ТЗЭлементы.ВыбратьСтроки();
	Пока ТЗЭлементы.ПолучитьСтроку() = 1 Цикл
		ДобавитьВыбранноеВРезультат(ТЗПодбора);
		ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ТЗЭлементы.Номенклатура, ТЗЭлементы.Продукция_Элемент);

		ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
		ТЗЭлементы.Остаток = ТЗПодбора.Итог("Остаток"); // Запишем в 1 таблицу
	КонецЦикла;   
	
    ДобавитьВыбранноеВРезультат(ТЗПодбора);
	ТЗПодбора.УдалитьСтроки();

	Попытка ТаблПоле.ОбновитьСтроки(); Исключение КонецПопытки;

КонецПроцедуры

//******************************************************************************
// Заполняет данными из документа при открытии обработки или интерактивно
Процедура ЗаполнитьТЗЭлементовПоОстаткам(Док)    
	
	ТЗЭлементы.УдалитьСтроки();
	ТЗПодбора.УдалитьСтроки();	
	тзРезультирующая.УдалитьСтроки();
	
	тз = СоздатьОбъект("ТаблицаЗначений");
	Док.ВыгрузитьТабличнуюЧасть(тз);	
	
	СпрПартии = СоздатьОбъект("Справочник.ВСД_Партия");
	СпрПартии.ВыбратьЭлементы();
	колво=0; КолвоМакс=500;
	Пока СпрПартии.ПолучитьЭлемент()=1 Цикл
		Если (СпрПартии.ПометкаУдаления()=1) Тогда
			Продолжить;
		КонецЕсли;
		Если (СпрПартии.Получатель_Площадка <>  Отправитель_площадка) Тогда
			Продолжить;
		КонецЕсли;
		Если (СпрПартии.Получатель_ХозСубъект <>  Отправитель_ХозСубъект) Тогда
			Продолжить;
		КонецЕсли;

		колво = колво+1;
		//КонтекстВызывающего.НоваяСтрока();
		//
		//КонтекстВызывающего.ВидПродукции = КонтекстВызывающего.Партия.ВидПродукции;
		//КонтекстВызывающего.ЕдиницаИзмерения = КонтекстВызывающего.Партия.ЕдиницаИзмерения;
		//КонтекстВызывающего.Количество = КонтекстВызывающего.Партия.Количество;
		//КонтекстВызывающего.НаименованиеПродукции = КонтекстВызывающего.Партия.НаименованиеПродукции;
		//КонтекстВызывающего.Продукция_Элемент = КонтекстВызывающего.Партия.Продукция_Элемент;

		
		//Продукция_Элемент = тз.Номенклатура.ВСД_Продукция_Элемент;
		//Если ПустоеЗначение(Продукция_Элемент) = 1 Тогда
		//	Попытка
		//		Продукция_Элемент = тз.Продукция_Элемент;
		//		Если ПустоеЗначение(Продукция_Элемент) = 1 Тогда
		//			Продолжить;
		//		КонецЕсли;
		//	Исключение
		//		Продолжить;
		//	КонецПопытки
		//КонецЕсли;
		
		Партия = СпрПартии.ТекущийЭлемент();
		
		ТЗЭлементы.НоваяСтрока();
		//ТЗЭлементы.Номенклатура = тз.Номенклатура;
		ТЗЭлементы.Продукция_Элемент = Партия.Продукция_Элемент;
		ТЗЭлементы.Количество = Партия.Количество;

		ТЗ.Продукция_Элемент = Партия.Продукция_Элемент;

		//Сомнительный момент: в Результат нужно всегда писать
		//СкопироватьСтрокуВТЗ(ТЗРезультирующая, тз);		
		Если колво >= КолвоМакс Тогда Прервать;
		КонецЕсли;
	КонецЦикла;
	
    ТЗЭлементы.Свернуть("Номенклатура,Продукция_Элемент","Количество,Недостача,Остаток");

    // Подсчитаем недостачу
	ТЗЭлементы.ВыбратьСтроки();
	Пока ТЗЭлементы.ПолучитьСтроку() = 1 Цикл
		ДобавитьВыбранноеВРезультат(ТЗПодбора);
		ВыгрузитВПодбор_УбратьИзРезультата_ПоФильтру(ТЗЭлементы.Номенклатура, ТЗЭлементы.Продукция_Элемент);

		ТЗЭлементы.Недостача = ТЗЭлементы.Количество - ТЗПодбора.Итог("Количество"); // Запишем в 1 таблицу
		ТЗЭлементы.Остаток = ТЗПодбора.Итог("Остаток"); // Запишем в 1 таблицу
	КонецЦикла;   
	
    ДобавитьВыбранноеВРезультат(ТЗПодбора);
	ТЗПодбора.УдалитьСтроки();

	Попытка ТаблПоле.ОбновитьСтроки(); Исключение КонецПопытки;

КонецПроцедуры


//******************************************************************************
Процедура ПриОткрытии()
	тзРезультирующая = ГМ.СоздатьТзПартий();	
	Форма.ИспользоватьСлой("Общий,Основной");
	
	Парам = Форма.Параметр;
	Если ПустоеЗначение(Парам) = 0 Тогда
		Отправитель_ХозСубъект = Парам.Получить("Отправитель_ХозСубъект");
		Отправитель_Площадка = Парам.Получить("Отправитель_Площадка");
		
		Форма.ТекстХозСубъект.Заголовок(Отправитель_ХозСубъект.Наименование);
		Форма.ТекстПлощадка.Заголовок(Строка(Отправитель_Площадка));

		Если ПустоеЗначение(Парам.Получить("Заголовок")) = 0 Тогда
			Форма.Заголовок(Парам.Получить("Заголовок"));
		КонецЕсли;

		КонтекстВызывающего = Парам.Получить("ТекущийДокумент");  
		
		Попытка 
			ГМ = КонтекстВызывающего.ГМ; 
		Исключение 
			ГМ = СоздатьОбъект("Меркурий_ГлобальныйМодуль"); 
		КонецПопытки;
			
		ДокОснование = КонтекстВызывающего.ДокОснование;
		Форма.ТекстПолучатель.Заголовок(Строка(КонтекстВызывающего.Получатель_Площадка));
		Форма.ТекстДокОснование.Заголовок(ДокОснование.Вид()+" №"+ДокОснование.НомерДок+" от "+ДокОснование.ДатаДок);
		
	    Если КонтекстВызывающего.КоличествоСтрок() > 0 Тогда
	    	ЗаполнитьТЗЭлементов(КонтекстВызывающего);
		КонецЕсли;

		Если (ПустоеЗначение(КонтекстВызывающего.ДокОснование) = 0) и (ТЗЭлементы.КоличествоСтрок()=0) Тогда
			//Транзакция пустая - попробуем по Реализации
			ЗаполнитьТЗЭлементов(КонтекстВызывающего.ДокОснование);
		ИначеЕсли (ТЗЭлементы.КоличествоСтрок()=0) Тогда // заполним по остаткам
			Сообщить("Пустой документ основание, заполняем список подбора по остаткам на площадке "+Отправитель_Площадка);
			ЗаполнитьТЗЭлементовПоОстаткам(КонтекстВызывающего);
		КонецЕсли;
	КонецЕсли;
	
	оПривязки=СоздатьОбъект("Меркурий.Привязки");
	оПривязки.УстановитьФорму(Форма);

	Если Форма.МодальныйРежим() = 0 Тогда
	    оПривязки.Привязка("кнЗакрыть,кнОК", "T", "Форма");
		оПривязки.Привязка("ТаблПодбора", "TH", "Форма", "W", "Форма");
	    оПривязки.Привязка("кнУдалить,кнУдалитьВсе,кнПодбор,кнВсеПартии,кнОчиститьВП,
		|Производитель_Площадка,тПроизводитель_Площадка, тФильтрПартий", "T", "ТаблПодбора", "L", "Форма"); //[+], 24.06.2019
		оПривязки.Привязка("РамкаКоличество, ТекстКоличество, РамкаПодобрано, ТекстПодобрано, РамкаОстаток, ТекстОстаток", "T", "Форма", "L", "Форма");
		оПривязки.Привязка("ТаблПоле", "H", "ТаблПодбора", "W", "Форма");
		оПривязки.Привязка("Версия","T","Форма", "L", "Форма");
	КонецЕсли;	      
	
КонецПроцедуры      

//******************************************************************************
Процедура ЗаполнитьВсеПартии()
	Если Вопрос("Табличная часть будет очищена!"+РазделительСтрок+"Вы уверены?","Да+Нет") = "Нет" Тогда Возврат;
	КонецЕсли;	

	КонтекстВызывающего.УдалитьСтроки();
	ТЗЭлементы.УдалитьСтроки();
	ТЗРезультирующая.УдалитьСтроки();
	ТЗПодбора.УдалитьСтроки();

	КолвоМакс = 500;
	ВвестиЧисло(КолвоМакс, "Введите колво партий", 10, 0, );

	СпрПартии = СоздатьОбъект("Справочник.ВСД_Партия");
	СпрПартии.ВыбратьЭлементы();
	колво=0;
	Пока СпрПартии.ПолучитьЭлемент()=1 Цикл
		Если (СпрПартии.ПометкаУдаления()=1) Тогда
			Продолжить;
		КонецЕсли;
		Если (СпрПартии.Получатель_Площадка <>  Отправитель_площадка) Тогда
			Продолжить;
		КонецЕсли;
		Если (СпрПартии.Получатель_ХозСубъект <>  Отправитель_ХозСубъект) Тогда
			Продолжить;
		КонецЕсли;

		колво = колво+1;
		КонтекстВызывающего.НоваяСтрока();
		КонтекстВызывающего.Партия = СпрПартии.ТекущийЭлемент();
		КонтекстВызывающего.Продукция = КонтекстВызывающего.Партия.Продукция;
		КонтекстВызывающего.ВидПродукции = КонтекстВызывающего.Партия.ВидПродукции;
		КонтекстВызывающего.ЕдиницаИзмерения = КонтекстВызывающего.Партия.ЕдиницаИзмерения;
		КонтекстВызывающего.Количество = КонтекстВызывающего.Партия.Количество;
		КонтекстВызывающего.НаименованиеПродукции = КонтекстВызывающего.Партия.НаименованиеПродукции;
		КонтекстВызывающего.Продукция_Элемент = КонтекстВызывающего.Партия.Продукция_Элемент;

		Если колво >= КолвоМакс Тогда Прервать;
		КонецЕсли;
	КонецЦикла;
    ПриОткрытии();

КонецПроцедуры
                  
Процедура ВыполнитьЗапись()

	// Перенесем данные из ТЗРезультирующая в документ
	// Предварительно дополнив ее строками из ТЗПодбор
	ДобавитьВыбранноеВРезультат(ТЗПодбора);

	Если ПустоеЗначение(КонтекстВызывающего.ДокОснование)=0 Тогда
		//Добавим в результат строки с недостачей - чтобы сохранить состав документа
		ТЗЭлементы.ВыбратьСтроки();
		Пока ТЗЭлементы.ПолучитьСтроку() = 1 Цикл
		    Если ТЗЭлементы.Недостача = 0 Тогда Продолжить;
			КонецЕсли;
			ТЗРезультирующая.НоваяСтрока();
			ТЗРезультирующая.Номенклатура = ТЗЭлементы.Номенклатура;
			ТЗРезультирующая.Продукция_Элемент = ТЗЭлементы.Продукция_Элемент;
			ТЗРезультирующая.Количество = ТЗЭлементы.Недостача;
		КонецЦикла;
	КонецЕсли;

    ТЗРезультирующая.ВыбратьСтроки();
	Пока ТЗРезультирующая.ПолучитьСтроку() = 1 Цикл
		ГМ.ЗаполнитьСтрокуДокумента(ТЗРезультирующая, ТЗРезультирующая);
		
		Если ВРЕГ( КонтекстВызывающего.ДокОснование.Вид()) = "ВСД2_ТРАНЗАКЦИЯ" Тогда
			ТЗРезультирующая.СвязанныйДокументВСД = КонтекстВызывающего.ДокОснование;
		КонецЕсли;
	КонецЦикла;

	//Толко после всего вышеуказанного переносить в документ!!!!!!!!
	КонтекстВызывающего.УдалитьСтроки();
	КонтекстВызывающего.ЗагрузитьТабличнуюЧасть(ТЗРезультирующая);
	КонтекстВызывающего.Форма.Обновить(1);
	//ОткрытьФорму(ТекДок);
КонецПроцедуры

//******************************************************************************
Процедура ПриЗакрытии()

	Если Вопрос("Перенести подобранные партии в документ?", 3)=6 Тогда
		ВыполнитьЗапись();
	КонецЕсли;
	
КонецПроцедуры // ПриЗакрытии

//******************************************************************************
Процедура ПослеСозданияФормы()
	ТаблПоле=ГМ.СоздатьТабличноеПоле(Контекст, "ТаблПоле", ТЗЭлементы, 1, 0);
	//[+]serpent, 11.06.2019
	//{ для красоты добавляем номер строки
	НоваяКол = ТаблПоле.Колонки.Вставить("НомерСтроки",1);
	НоваяКол.Заголовок="№№";
	НоваяКол.Ширина=15;
	НоваяКол.Данные="НомерСтроки";
	ОбновитьЭлементыФормы();
	//}[+]_
	
	ТаблПодбора=ГМ.СоздатьТабличноеПоле(Контекст, "ТаблПодбора", ТЗПодбора, 1, 0);
КонецПроцедуры      

//{========================= Список изменений =================
Процедура ПриНажатииЛевойКнопки(Сост, х, у)
	
	ФормаРасш = СоздатьОбъект("РасширениеФормы");
	Атр = ФормаРасш.ПолучитьАтрибутПоКоординатам(х,у);
	Если ТипЗначенияСтр(Атр) = "АтрибутФормы" Тогда
		Если Атр.Идентификатор = "Версия" Тогда
			ЗапуститьПриложение(ГМ.ВерсияСсылка());
		КонецЕсли;  
	КонецЕсли;	
	
КонецПроцедуры
//}===========================================================

//{==================== Привязки ================================
//******************************************************************************
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

//******************************************************************************
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры
//}===========================================================

Процедура УстановитьФильтр()	
	
	Если ПустоеЗначение(Производитель_Площадка)=0 Тогда
		А = ТЗЭлементы.КоличествоСтрок(); 
	    Пока А>0 Цикл 
			Продукция_Элемент = ТЗЭлементы.ПолучитьЗначение(А,"Продукция_Элемент");
			
			Если Продукция_Элемент.Производитель_Площадка <> Производитель_Площадка Тогда 
				ТЗЭлементы.УдалитьСтроку(А);
			КонецЕсли;
		
			А=А-1;
			
		КонецЦикла;
	КонецЕсли;

	Попытка ТаблПоле.ОбновитьСтроки(); Исключение КонецПопытки;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 
ТЗЭлементы = СоздатьОбъект("ТаблицаЗначений");
ТЗЭлементы.НоваяКолонка("Номенклатура","Справочник.Номенклатура",  , ,"Номенклатура",20);
ТЗЭлементы.НоваяКолонка("Продукция_Элемент","Справочник.ВСД_Продукция_Элемент",  , ,"Продукция_Элемент",20);
ТЗЭлементы.НоваяКолонка("Количество", "Число",14,3,"Количество"     ,10,,2);
ТЗЭлементы.НоваяКолонка("Недостача", "Число",14,3,"Осталось подобрать"     ,10,,2);
ТЗЭлементы.НоваяКолонка("Остаток", "Число",14,3,"Остаток Партии"     ,10,,2);

ТЗПодбора = СоздатьОбъект("ТаблицаЗначений");
ТЗПодбора.НоваяКолонка("Номенклатура", "Справочник.Номенклатура");
ТЗПодбора.НоваяКолонка("Продукция_Элемент","Справочник.ВСД_Продукция_Элемент");
ТЗПодбора.НоваяКолонка("Партия","Справочник.ВСД_Партия");
ТЗПодбора.НоваяКолонка("Количество", "Число",14,3,"Количество"     ,10,,2);
ТЗПодбора.НоваяКолонка("Остаток", "Число",14,3,"Остаток Партии"     ,10,,2);
ТЗПодбора.НоваяКолонка("Изготовлено",,,,,7);
ТЗПодбора.НоваяКолонка("СрокГодности",,,,"Срок годности",7);
ТЗПодбора.НоваяКолонка("НомерПартии",,,,"Номер партии",7);
ТЗПодбора.НоваяКолонка("ЕдиницаИзмерения","Справочник.ВСД_ЕдиницыИзмерения");
