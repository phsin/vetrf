Перем ТипЗначений Экспорт;
Перем КонтекстФормы Экспорт;
Перем КонтейнерТабличногоПоля Экспорт;
Перем КонтейнерКоманднойПанели Экспорт;
Перем ТабличноеПоле Экспорт;
Перем Данные Экспорт;
Перем Версия Экспорт;

Перем Использовать256Цветов Экспорт;

Перем ПоставщикДанных;
Перем Сервис;

//ТабличноеПоле//:ПоставщикДанных.ТабличноеПоле

Функция АтрибутСуществует(Идентификатор)
	Если ТипЗначенияСтр(КонтекстФормы) <> "ГрупповойКонтекст" Тогда
		Возврат 0;
	КонецЕсли;
	РасширениеФормы = СоздатьОбъект("РасширениеФормы");
	РасширениеФормы.УстановитьФорму(КонтекстФормы.Форма);
	АтрФормы = РасширениеФормы.ПолучитьАтрибут(Идентификатор);
	Если ТипЗначенияСтр(АтрФормы) = "АтрибутФормы" Тогда
		Возврат 1;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции	// АтрибутСуществует

Процедура Конструктор()
	КонтекстФормы = я().ПолучитьКонтекстОкружения();
	
	ПоставщикДанных = ПолучитьПустоеЗначение();
	
	Сервис = СоздатьОбъект("ПоставщикДанных.Сервис");
	Использовать256Цветов = 0;
	
	Версия = "4.1.1 01.11.2010";
КонецПроцедуры	// Конструктор

Процедура Деструктор()
КонецПроцедуры

//{ =============================================================== КОНТРОЛЬ ЗАПИСИ ПУБЛИЧНЫХ АТРИБУТОВ
Процедура ПриЗаписи_КонтекстФормы(Параметр)
	Возврат;
КонецПроцедуры	// ПриЗаписи_КонтекстФормы

Процедура ПриЗаписи_КонтейнерТабличногоПоля(Параметр)
	Если АтрибутСуществует(Параметр) = 0 Тогда
		Возврат;
	КонецЕсли;
	КонтейнерТабличногоПоля = Параметр;
	Если ПустоеЗначение(ПоставщикДанных) = 0 Тогда
		ПоставщикДанных.КонтейнерТабличногоПоля = КонтейнерТабличногоПоля;
	КонецЕсли;
КонецПроцедуры	// ПриЗаписи_КонтейнерТабличногоПоля

Процедура ПриЗаписи_КонтейнерКоманднойПанели(Параметр)
	Если АтрибутСуществует(Параметр) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КонтейнерКоманднойПанели = Параметр;
	Если ПустоеЗначение(ПоставщикДанных) = 0 Тогда
		ПоставщикДанных.КонтейнерКоманднойПанели = КонтейнерКоманднойПанели;
	КонецЕсли;
КонецПроцедуры	// ПриЗаписи_КонтейнерКоманднойПанели

Процедура ПриЗаписи_ТипЗначений(Параметр)
	Если ПустоеЗначение(ТипЗначений) = 0 Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗначенияСтр(Параметр) = "Строка" Тогда
		ТипЗначений = Параметр;
	ИначеЕсли ТипЗначенияСтр(Параметр) = "Справочник" Тогда
		ТипЗначений = "Справочник."+Параметр.Вид();
	ИначеЕсли ТипЗначенияСтр(Параметр) = "Документ" Тогда
		ТипЗначений = "Документ."+Параметр.Вид();
	КонецЕсли;
	
	Если Врег(ТипЗначений) = "ИНДЕКСИРОВАННАЯТАБЛИЦА" Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.ИндексированнаяТаблица");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
	ИначеЕсли Врег(ТипЗначений) = "СПИСОКЗНАЧЕНИЙ" Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.СписокЗначений");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
	ИначеЕсли Лев(Врег(ТипЗначений),11) = "СПРАВОЧНИК." Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.Справочник");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
		ПоставщикДанных.ВидСправочника = Сред(ТипЗначений,12);
	ИначеЕсли Лев(Врег(ТипЗначений),8) = "РЕГИСТР." Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.Регистр");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
		ПоставщикДанных.ВидРегистра = Сред(ТипЗначений,9);
	ИначеЕсли Лев(Врег(ТипЗначений),9) = "ДОКУМЕНТ." Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.Документы");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
		ПоставщикДанных.ВидДокумента = Сред(ТипЗначений,10);
	ИначеЕсли Лев(Врег(ТипЗначений),7) = "ЖУРНАЛ." Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.Журнал");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
		ПоставщикДанных.ВидЖурнала = Сред(ТипЗначений,8);
	ИначеЕсли Лев(Врег(ТипЗначений),15) = "ТАБЛИЧНАЯЧАСТЬ." Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.ТабличнаяЧасть");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
		ПоставщикДанных.ВидДокумента = Сред(ТипЗначений,16);
	ИначеЕсли Врег(СокрЛП(ТипЗначений)) = "ОПЕРАЦИИ" Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.Операции");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
		ПоставщикДанных.ТипОперации = "Операции";
	ИначеЕсли Врег(СокрЛП(ТипЗначений)) = "ПРОВОДКИ" Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.Проводки");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
		ПоставщикДанных.ТипПроводки = "Проводки";
	ИначеЕсли Врег(СокрЛП(ТипЗначений)) = "ДЕРЕВОЗНАЧЕНИЙ" Тогда
		Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
			ПоставщикДанных = СоздатьОбъект("ПоставщикДанных.ДеревоЗначений");
			ПоставщикДанных.КонтекстФормы = КонтекстФормы;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустоеЗначение(КонтейнерТабличногоПоля) = 0 Тогда
		ПоставщикДанных.КонтейнерТабличногоПоля = КонтейнерТабличногоПоля;
	КонецЕсли;
	Если ПустоеЗначение(КонтейнерКоманднойПанели) = 0 Тогда
		ПоставщикДанных.КонтейнерКоманднойПанели = КонтейнерКоманднойПанели;
	КонецЕсли;
КонецПроцедуры	// ПриЗаписи_Значение

Процедура ПриЗаписи_ПоставщикДанных(Параметр)
	Возврат;
КонецПроцедуры	// ПриЗаписи_ПоставщикДанных

Процедура ПриЗаписи_ТабличноеПоле(Параметр)
	Возврат;
КонецПроцедуры	// ПриЗаписи_ПоставщикДанных

Процедура ПриЗаписи_Данные(Параметр)
	Возврат;
КонецПроцедуры	// ПриЗаписи_ПоставщикДанных

Процедура ПриЗаписи_Версия(Параметр)
	Возврат;
КонецПроцедуры // ПриЗаписи_Версия
//}

//{ =============================================================== КОНТРОЛЬ ЧТЕНИЯ ПУБЛИЧНЫХ АТРИБУТОВ
Процедура ПриПолучении_ТабличноеПоле(Параметр)
	Если ПустоеЗначение(ПоставщикДанных) = 1 Тогда
		Параметр = 0;
	Иначе
		Параметр = ПоставщикДанных.ТабличноеПоле;
	КонецЕсли;
КонецПроцедуры	// ПриПолучении_ТабличноеПоле

Процедура ПриПолучении_Данные(Параметр)
	Параметр = ПоставщикДанных;
КонецПроцедуры	// ПриПолучении_Данные
//}

Процедура Обновить() Экспорт
	ПоставщикДанных.ТабличноеПоле.Обновить();
КонецПроцедуры	// Обновить
