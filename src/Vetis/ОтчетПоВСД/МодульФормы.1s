Функция ПолучитьЦветСтроки(СтатусДок)
	Если _Раскрашивать = 0  Тогда
	    Возврат "";
	КонецЕсли;
	
	Рез = "";
	Если (СокрЛП(СтатусДок) = "CONFIRMED") или 
		(СокрЛП(СтатусДок) = "COMPLETED") или 
		(СокрЛП(СтатусДок) = "Проведен") или
		(СтатусДок = Перечисление.ВСД_СтатусВСД.CONFIRMED) или 
		(СтатусДок = Перечисление.ВСД_СтатусВСД.UTILIZED) Тогда			
		Рез = "Зеленый";
	ИначеЕсли  СокрЛП(СтатусДок) = "REJECTED" Тогда
		Рез = "Красный";
	//ИначеЕсли  СокрЛП(СтатусДок) = "Аннулирова" Тогда
	Иначе
		Рез = "Желтый";
	//Иначе
		//Сообщить("Цвет не определен Статус = "+СтатусДок);
	КонецЕсли;
	Возврат Рез;
КонецФункции

Процедура Сформировать()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(СформироватьВСД)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|ОбрабатыватьДокументы все;";
	Если _БезУдаленных = 1 Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|Обрабатывать НеПомеченныеНаУдаление;";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|Обрабатывать ПомеченныеНаУдаление;";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ВСД = Документ.ВСД.ТекущийДокумент, Документ.ВСД2.ТекущийДокумент;
	|Транзакция = Документ.ВСД2.ДокОснование, Документ.ВСД.ДокОснование;
	|Группировка Транзакция;
	|Группировка ВСД;
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;
    ВремТЗ = СоздатьОбъект("ТаблицаЗначений");
	Запрос.Выгрузить(ВремТЗ,0,0); 
	Если ВремТЗ.КоличествоСтрок() = 0 Тогда
	    Предупреждение("Нет данных");
		Возврат;
	КонецЕсли;
	Состояние("Заполнение выходной таблицы...");
	
	ВремТЗ.НоваяКолонка("ОснованиеТранзакции","Документ");
	ВремТЗ.НоваяКолонка("Статус");
	ВремТЗ.НоваяКолонка("типВСД");
	ВремТЗ.ВыбратьСтроки();
	Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
		Если ВремТЗ.Транзакция.Выбран()  = 1 Тогда
		    ВремТЗ.ОснованиеТранзакции = ВремТЗ.Транзакция.ДокОснование;
		КонецЕсли;
		Если ВремТЗ.ВСД.Выбран()  = 1 Тогда
			ВремТЗ.Статус = ВремТЗ.ВСД.Статус;
			ВремТЗ.ТипВСД = ВремТЗ.ВСД.типВСД;;
		КонецЕсли;		
	КонецЦикла;
	//Сортировка по Основанию (Реализация, Перемещение и тп)
	ВремТЗ.Сортировать("+ОснованиеТранзакции,+Транзакция");
//	ВремТЗ.ВыбратьСтроку();
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Новая");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	
	ВремТЗ.ПолучитьСтрокуПоНомеру(1);
	
	ПредОснование = ВремТЗ.ОснованиеТранзакции;
	ПредТранзакция = ВремТЗ.Транзакция;
	СтатусТранзакции = ?(ВремТЗ.Транзакция.Выбран()=0,"",СокрЛП(ВремТЗ.Транзакция.Статус));
	ЦветСтроки = ПолучитьЦветСтроки(СтатусТранзакции);
	Если ПустоеЗначение(ПредОснование) = 0 Тогда
		Таб.ВывестиСекцию("ОснованиеТранзакции");    
	КонецЕсли;
	Если ПредТранзакция.Выбран() = 1 Тогда
		Таб.ВывестиСекцию("Транзакция"+ЦветСтроки);    
	КонецЕсли;
	
	ВремТЗ.ВыбратьСтроки();
	Пока ВремТЗ.ПолучитьСтроку() = 1 Цикл
		Если НЕ(ПредОснование = ВремТЗ.ОснованиеТранзакции) Тогда
		    ПредОснование = ВремТЗ.ОснованиеТранзакции;
			ЦветСтроки = "";			
			Таб.ВывестиСекцию("ОснованиеТранзакции");
		КонецЕсли;
		Если НЕ(ПредТранзакция = ВремТЗ.Транзакция) Тогда
		    ПредТранзакция = ВремТЗ.Транзакция;
			СтатусТранзакции = ?(ВремТЗ.Транзакция.Выбран()=0,"",СокрЛП(ВремТЗ.Транзакция.Статус));
			ЦветСтроки = ПолучитьЦветСтроки(СтатусТранзакции);
			Таб.ВывестиСекцию("Транзакция"+ЦветСтроки);
		КонецЕсли;
		ЦветСтроки = ПолучитьЦветСтроки(ВремТЗ.Статус);
		Таб.ВывестиСекцию("ВСД"+ЦветСтроки);    
	КонецЦикла;
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Сформировать", "");

КонецПроцедуры



Процедура Сформировать2()
	Перем Запрос, ТекстЗапроса, Таб;
	//Создание объекта типа Запрос
	Запрос = СоздатьОбъект("Запрос");
	ТекстЗапроса =
	"//{{ЗАПРОС(Сформировать)
	|Период с ВыбНачПериода по ВыбКонПериода;
	|ОбрабатыватьДокументы все;
	|Обрабатывать НеПомеченныеНаУдаление;
	|ВСД = Документ.ВСД2_транзакция.ТекущийДокумент;
	|ДокОснование = Документ.ВСД2_транзакция.ДокОснование;
	|Статус = Документ.ВСД2_транзакция.Статус;
	|Группировка ДокОснование;
	|Группировка ВСД;
	|Группировка Статус;
	|"//}}ЗАПРОС
	;
	// Если ошибка в запросе, то выход из процедуры
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Возврат;
	КонецЕсли;

	// Подготовка к заполнению выходных форм данными запроса
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Сформировать");
	// Заполнение полей "Заголовок"
	Таб.ВывестиСекцию("Заголовок");
	Состояние("Заполнение выходной таблицы...");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);
	Пока Запрос.Группировка(1) = 1 Цикл
		// Заполнение полей ДокОснование
		Пока Запрос.Группировка(2) = 1 Цикл
			// Заполнение полей ВСД
			Пока Запрос.Группировка(3) = 1 Цикл
				// Заполнение полей Статус
				Если СокрЛП(Запрос.Статус)="COMPLETED"  Тогда
					Таб.ВывестиСекцию("Статус");
				Иначе
					Таб.ВывестиСекцию("Статус0");
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Вывод заполненной формы
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Сформировать", "");
КонецПроцедуры


Процедура Отчет3()
	
	RS = СоздатьОбъект("ODBCRecordset");
	RS.УстБД1С();

	t1 = ГМ.Старт();		
	//tt1=_GetPerformanceCounter();
	
	Состояние("Запрос списка документов ");

	НазваниеВидаСправочникаФирмы		= ГМ.ПолучитьКонстанту("НазваниеВидаСправочникаФирмы");
	НазваниеВидаДокументаРеализация 	= ГМ.ПолучитьКонстанту("НазваниеВидаДокументаРеализация");
	НазваниеРеквизитаГрузополучатель 	= ГМ.ПолучитьКонстанту("НазваниеРеквизитаГрузополучатель");
	НазваниеРеквизитаНоменклатура		= ГМ.ПолучитьКонстанту("НазваниеРеквизитаНоменклатура");
	НазваниеРеквизитаКоличество 		= ГМ.ПолучитьКонстанту("НазваниеРеквизитаКоличество");
	НазваниеРеквизитаКоличествоМест 	= ГМ.ПолучитьКонстанту("НазваниеРеквизитаКоличествоМест");
	ПропускатьПустыеСвойства 			= ГМ.ПолучитьКонстанту("ПропускатьПустыеСвойства");

	Если ПустаяСтрока(НазваниеВидаСправочникаФирмы) = 1 Тогда
		Сообщить("В Параметрах не указано НазваниеВидаСправочникаФирмы!","!"); //Возврат "";
	КонецЕсли;
	Если ПустаяСтрока(НазваниеРеквизитаГрузополучатель) = 1 Тогда
		Сообщить("Не выбрано название реквизита грузополучатель!","!"); Возврат ;
	КонецЕсли;

	ВидГрузополучателя = Метаданные.Документ(НазваниеВидаДокументаРеализация).РеквизитШапки(НазваниеРеквизитаГрузополучатель).Вид;
                        
	НоменклатураИмяРеквизита = "Номенклатура";
	ФирмаИмяРеквизита = "";
	ФирмаОбщийРеквизит = ГМ.ПолучитьИмяРеквизитаФирма(НазваниеВидаДокументаРеализация, ФирмаИмяРеквизита);
			

	Если ГМ.ЭтоSQL=1 Тогда

		ТекстЗапроса = "
		|SELECT 
		|   Жур.IDDoc as [Док $Документ],
		|   Жур.IDDocDef as Док_вид,
		|	COALESCE(ДокВСД.IDDoc, $ПустойИД) as [Док_ВСД2_Транзакция $Документ.ВСД2_транзакция],
		|	ДокВСД.Статус as [Статус2 $Перечисление.ВСД_СтатусВСД],
		|	ДокВСД.Отправлен as [Отправлен2],
		|	Жур.DocNo as [НомерДок],
		|	CASE
		|		WHEN Жур.Closed & 1 = 1
		|		THEN 'Проведен'
		|		ELSE 'Не проведен'
		|	END as [Проведен],
		|	Жур.Closed & 1 as флПроведен,
		|	CASE
		|		WHEN Жур.ISMARK = 0
		|		THEN ''
		|		ELSE 'Удален'
		|	END as [Удален],
		|	Жур.ISMARK as флУдален,
		|	$ДокР.Контрагент as [Контрагент $Справочник.Контрагенты],
		|	$ДокР."+ НазваниеРеквизитаГрузополучатель +" as [Грузополучатель $Справочник."+ ВидГрузополучателя +"],
		|	%ФункцияКоличество% as [Количество],
		|	%ФункцияКоличествоМест% as [КоличествоМест]
		|
		|
		|FROM
		|    _1SJourn Жур
		|INNER JOIN
		|	$Документ."+ НазваниеВидаДокументаРеализация +" as ДокР
		|		ON Жур.IDDoc = ДокР.IDDoc
		// док ВСД2_Транзакция
		|Left join
			//| исключаем помеченные на удаление документы ВСД_транзакция, Иначе дублируются Реализации с пустыми ВСД
			//|	$Документ.ВСД_транзакция as ДокВСД
			|	(SELECT 
			|	Жур.IDDoc as IDDoc,
			|	COALESCE( $Док_ВСД2_Транзакция.СтатусВСД, $ПустойИД) as [Статус],
			|	CASE
			|		WHEN $Док_ВСД2_Транзакция.applicationID <> ''
			|		THEN 'Да'
			|		ELSE 'Нет'
			|	END as [Отправлен],
			|	$Док_ВСД2_Транзакция.ДокОснование as ДокОснование
			|	FROM
			|   	_1SJourn Жур
			|	INNER JOIN
			|		$Документ.ВСД2_транзакция as Док_ВСД2_Транзакция
			|			ON Жур.IDDoc = Док_ВСД2_Транзакция.IDDoc
			|WHERE
			| Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~
			| AND Жур.ISMARK = 0			
			|	) as ДокВСД
			|	ON SUBSTRING(ДокВСД.ДокОснование, 5, 9) = Жур.IDDoc	
			// ВСД тоже фильтруем По фирме !!!
			//|				%УсловиеПоФирмеВСД%			
		|
		|WHERE
		|    Жур.Date_Time_IDDoc BETWEEN :НачДата AND :КонДата~ AND
		|    Жур.IDDocDef = $ВидДокумента."+ НазваниеВидаДокументаРеализация +"
		|
		|
		//|	%УсловиеПоГрузополучателю%
		//|	%УсловиеПоФирме%
		//|	%УсловиеПоСкладу%
		//|
		|order by Жур.DocNo
		|";
		
	
		Если ПропускатьПустыеСвойства = 0 Тогда
			ФункцияКоличество = " 
			| (SELECT SUM( $ДокСтроки1."+НазваниеРеквизитаКоличество+")
			|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки1
			|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
			|   AND $ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0) ";
			ФункцияКоличествоМест = " 
			| (SELECT SUM( $ДокСтроки2."+НазваниеРеквизитаКоличествоМест+" )
			|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки2
			|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
			|   AND $ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0) ";
		Иначе
			ФункцияКоличество = " 
			| (SELECT SUM( $ДокСтроки1."+НазваниеРеквизитаКоличество+")
			|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки1
			|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
			|   AND $ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0
			|   AND EXISTS(SELECT $Спр1.ВСД_Продукция_Элемент
			|      FROM $Справочник.ВСД_Номенклатура_Соответсвия AS Спр1
			|      WHERE  $Спр1.ВСД_Продукция_Элемент <> $ПустойИД
			|       AND Спр1.ParentExt = $ДокСтроки1."+НоменклатураИмяРеквизита+")) ";				
			ФункцияКоличествоМест = " 
			| (SELECT SUM( $ДокСтроки2."+НазваниеРеквизитаКоличествоМест+")
			|  FROM $ДокументСтроки."+НазваниеВидаДокументаРеализация+" AS ДокСтроки2
			|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
			|   AND $ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0
			|   AND EXISTS(SELECT $Спр2.ВСД_Продукция_Элемент
			|      FROM $Справочник.ВСД_Номенклатура_Соответсвия AS Спр2
			|      WHERE  Спр2.ParentExt = $ДокСтроки2."+НоменклатураИмяРеквизита+")) ";
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличество%", ФункцияКоличество );
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличествоМест%", ФункцияКоличествоМест );
	
		RS.УстановитьТекстовыйПараметр("НачДата", ВыбНачПериода);
		RS.УстановитьТекстовыйПараметр("КонДата", ВыбКонПериода);

		Если ГМ.ПолучитьКонстанту("ВыводитьПодробнуюИнформацию")=1 Тогда  
			RS.Отладка(1);
		КонецЕсли;
		
		тз = RS.ВыполнитьИнструкцию(ТекстЗапроса);
		//тз.ВыбратьСтроку();
	Иначе

		ТекстЗапроса = "
		|SELECT 
		|   Жур.IDDoc as [Док :Документ],
		|   Жур.IDDocDef as Док_вид,
		|	COALESCE(ДокВСД.IDDoc, :ПустойИД) as [Док_ВСД2_Транзакция :Документ.ВСД2_транзакция],
		|	ДокВСД.Статус as [Статус2 :Перечисление.ВСД_СтатусВСД],
		|	ДокВСД.Отправлен as [Отправлен2],
		|	Жур.DocNo as [НомерДок],
		|	CASE
		|		WHEN Жур.Closed & 1 = 1
		|		THEN 'Проведен'
		|		ELSE 'Не проведен'
		|	END as [Проведен],
		|	Жур.Closed & 1 as флПроведен,
		|	CASE
		|		WHEN Жур.ISMARK = ''
		|		THEN ''
		|		ELSE 'Удален'
		|	END as [Удален],
		|	Жур.ISMARK as флУдален,
		|	ДокР.Контрагент as [Контрагент :Справочник.Контрагенты],
		|	ДокР."+ НазваниеРеквизитаГрузополучатель +" as [Грузополучатель :Справочник."+ ВидГрузополучателя +"],
		|	%ФункцияКоличество% as [Количество],
		|	%ФункцияКоличествоМест% as [КоличествоМест]
		|
		|
		|FROM
		|    Журнал Жур
		|INNER JOIN
		|	[Документ."+ НазваниеВидаДокументаРеализация +"] as ДокР
		|		ON Жур.IDDoc = ДокР.IDDoc
		// док ВСД2_Транзакция
		|Left join
			//| исключаем помеченные на удаление документы ВСД_транзакция, Иначе дублируются Реализации с пустыми ВСД
			//|	$Документ.ВСД_транзакция as ДокВСД
			|	(SELECT 
			|	Жур.IDDoc as IDDoc,
			|	COALESCE(Док_ВСД2_Транзакция.СтатусВСД, :ПустойИД) as [Статус],
			|	CASE
			|		WHEN Док_ВСД2_Транзакция.applicationID <> ''
			|		THEN 'Да'
			|		ELSE 'Нет'
			|	END as [Отправлен],
			|	Док_ВСД2_Транзакция.ДокОснование as ДокОснование
			|	FROM
			|   	Журнал Жур
			|	INNER JOIN
			|		[Документ.ВСД2_транзакция] as Док_ВСД2_Транзакция
			|			ON Жур.IDDoc = Док_ВСД2_Транзакция.IDDoc
			|WHERE
			| Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~
			| AND Жур.ISMARK = ''			
			|	) as ДокВСД
			|	ON SUBSTR(ДокВСД.ДокОснование, 5, 9) = Жур.IDDoc	
			// ВСД тоже фильтруем По фирме !!!
			//|				%УсловиеПоФирмеВСД%			
		|
		|WHERE
		|    Жур.idx_date_time_iddoc BETWEEN :НачДата AND :КонДата~ AND
		|    Жур.IDDocDef = :ВидДокумента."+ НазваниеВидаДокументаРеализация +"
		|
		|
		//|	%УсловиеПоГрузополучателю%
		//|	%УсловиеПоФирме%
		//|	%УсловиеПоСкладу%
		//|
		|order by Жур.DocNo
		|";
		
	
		Если ПропускатьПустыеСвойства = 0 Тогда
			ФункцияКоличество = " 
			| (SELECT SUM( ДокСтроки1."+НазваниеРеквизитаКоличество+")
			|  FROM [ДокументСтроки."+НазваниеВидаДокументаРеализация+"] AS ДокСтроки1
			|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
			|   AND ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0) ";
			ФункцияКоличествоМест = " 
			| (SELECT SUM( ДокСтроки2."+НазваниеРеквизитаКоличествоМест+" )
			|  FROM [ДокументСтроки."+НазваниеВидаДокументаРеализация+"] AS ДокСтроки2
			|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
			|   AND ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0) ";
		Иначе
			ФункцияКоличество = " 
			| (SELECT SUM( ДокСтроки1."+НазваниеРеквизитаКоличество+")
			|  FROM [ДокументСтроки."+НазваниеВидаДокументаРеализация+"] AS ДокСтроки1
			|  WHERE ДокСтроки1.IDDoc = Жур.IDDoc
			|   AND ДокСтроки1."+НазваниеРеквизитаКоличество+" > 0
			|   AND EXISTS(SELECT Спр1.ВСД_Продукция_Элемент
			|      FROM [Справочник.ВСД_Номенклатура_Соответсвия] AS Спр1
			|      WHERE  Спр1.ВСД_Продукция_Элемент <> :ПустойИД
			|       AND Спр1.ParentExt = ДокСтроки1."+НоменклатураИмяРеквизита+")) ";				
			ФункцияКоличествоМест = " 
			| (SELECT SUM( ДокСтроки2."+НазваниеРеквизитаКоличествоМест+")
			|  FROM [ДокументСтроки."+НазваниеВидаДокументаРеализация+"] AS ДокСтроки2
			|  WHERE ДокСтроки2.IDDoc = Жур.IDDoc
			|   AND ДокСтроки2."+НазваниеРеквизитаКоличество+" > 0
			|   AND EXISTS(SELECT Спр2.ВСД_Продукция_Элемент
			|      FROM [Справочник.ВСД_Номенклатура_Соответсвия] AS Спр2
			|      WHERE  Спр2.ParentExt = ДокСтроки2."+НоменклатураИмяРеквизита+")) ";
		КонецЕсли;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличество%", ФункцияКоличество );
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ФункцияКоличествоМест%", ФункцияКоличествоМест );
				
		Запрос = ГМ.базаДанных.НовыйЗапрос();

		//Запрос.Подставлять("ВыбКлиент", ВыбКлиент);
		Запрос.Подставлять("НачДата", ВыбНачПериода);
		Запрос.Подставлять("КонДата", ВыбКонПериода);

		Если ГМ.ПолучитьКонстанту("ВыводитьПодробнуюИнформацию")=1 Тогда  
			Запрос.Отладка();
		КонецЕсли;		
		ТЗ = Запрос.ВыполнитьЗапрос(ТекстЗапроса);
		//ТЗ.ВыбратьСтроку();
	КонецЕсли;
	
	Таб = СоздатьОбъект("Таблица");
	Таб.ИсходнаяТаблица("Отчет3");
	Таб.ВывестиСекцию("Шапка");
	Таб.Опции(0, 0, Таб.ВысотаТаблицы(), 0);

	ПредРеализация = "";
	ПредТранзакция1 = "";
	ПредТранзакция2 = "";
	ПредВСД1 = "";
	ПредВСД2 = "";

	тз.ВыбратьСтроки();
	Пока тз.ПолучитьСтроку() = 1 Цикл
		Если (ПредРеализация <> тз.Док) Тогда
		    ПредРеализация = тз.док;
			ЦветСтроки = ПолучитьЦветСтроки(тз.Проведен);
			Таб.ВывестиСекцию("Реализация"+ЦветСтроки);
		КонецЕсли;
		Если (ПредТранзакция2 <> тз.Док_ВСД2_Транзакция) Тогда
		    ПредТранзакция2 = тз.Док_ВСД2_Транзакция;
			ЦветСтроки = ПолучитьЦветСтроки(тз.Статус2);
			Если ПустоеЗначение(тз.Док_ВСД2_Транзакция)=0 Тогда 
				Таб.ВывестиСекцию("Док_ВСД2_Транзакция"+ЦветСтроки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Таб.ТолькоПросмотр(1);
	Таб.Показать("Отчет_по_ВСД", "");

КонецПроцедуры

ВыбНачПериода = ТекущаяДата();
ВыбКонПериода = ВыбНачПериода;
_Раскрашивать = 1;