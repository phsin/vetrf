Перем оПривязки; //:Меркурий.Привязки
Перем тзПлощадки, тпПлощадки;

//======================================================================
Процедура ВыделитьВсе()
	тзПлощадки.ВыбратьСтроки();
	Пока тзПлощадки.ПолучитьСтроку() = 1 Цикл
		тзПлощадки.Пометка = 1;
	КонецЦикла;
	тпПлощадки.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Процедура ОтменитьВсе()
	тзПлощадки.ВыбратьСтроки();
	Пока тзПлощадки.ПолучитьСтроку() = 1 Цикл
		тзПлощадки.Пометка = 0;
	КонецЦикла;
	тпПлощадки.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Процедура тпПлощадкиПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
	Если ТипРегиона = 3 Тогда
		ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура тпПлощадкиПриВыбореФлажка(ТабличноеПоле,Стр, Колонка, ТипРегиона)
	ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзПлощадки);
	тзПлощадки.Пометка = ?(тзПлощадки.Пометка = 1,0,1);
	ТабличноеПоле.ОбновитьСтроки();
КонецПроцедуры

//======================================================================
Процедура Сформировать()       
	ВремТЗ = СоздатьОбъект("ТаблицаЗначений");
	тзПлощадки.Выгрузить(ВремТЗ);          
	
	СЦ = ВремТЗ.КоличествоСтрок();
	Пока СЦ > 0 Цикл
		Если ВремТЗ.ПолучитьЗначение(СЦ, "Пометка") = 0 Тогда
			ВремТЗ.УдалитьСтроку(СЦ);
		КонецЕсли;
		СЦ = СЦ - 1;
	КонецЦикла;
	
	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.ДобавитьЗначение("ЗагрузитьПлощадки", "Команда");
	СписокПараметров.ДобавитьЗначение(ВремТЗ, "тзПлощадки");

	КаталогОбработки = ГМ.СписокКонстант.Получить("КаталогМодуля");
	ОткрытьФорму("Отчет",СписокПараметров,КаталогОбработки+"Меркурий_ЗагрузкаПлощадок.ert");
КонецПроцедуры

//======================================================================
Процедура ПоКнопкеПоиск()
	Если ПустоеЗначение(Регион) = 1 Тогда
		Предупреждение("Не выбран регион!"); Возврат;
	КонецЕсли;
	                                              
	ВремТЗ = ГМ2.ПоискПлощадок(Наименование, Регион);
	тзПлощадки.УдалитьСтроки();
	                                             
	Для СЦ = 1 По ВремТЗ.КоличествоСтрок() Цикл
		тзПлощадки.НоваяСтрока();
		Для СК = 1 По тзПлощадки.КоличествоКолонок() Цикл   
			идКолонки=тзПлощадки.ПолучитьПараметрыКолонки(СК);
			Попытка
				ВремЗнач = ВремТЗ.ПолучитьЗначение(СЦ,идКолонки);
				тзПлощадки.УстановитьЗначение(СЦ, идКолонки, ВремЗнач);
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;
	
	тпПлощадки.ОбновитьСтроки();
КонецПроцедуры // ПоКнопкеПоиск

//======================================================================
Процедура ПриОткрытии()

   //Интеграционный модуль для переопределения функций, плюс несколько базовых функций
	ГМ._ПриОткрытии(Контекст);
	ГМ2.Инициализация(ГМ);
	ГМ.ЗагрузитьПараметрыВФорму(Контекст);

	Если Форма.МодальныйРежим() = 0 Тогда
		оПривязки.Привязка("тпПлощадки", "H", "Форма", "W", "Форма");
		оПривязки.Привязка("кнЗакрыть,кнДобавить, Версия","T","Форма");		
		оПривязки.Привязка("кнПометитьВсе,кнСнятьПометку","T","Форма","L","Форма");		
	КонецЕсли;

КонецПроцедуры

//======================================================================
Процедура ПослеСозданияФормы()

	тпПлощадки = ГМ.СоздатьТабличноеПоле(Контекст, "тпПлощадки", тзПлощадки,1,1);
	
КонецПроцедуры

//======================================================================
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//========================= Список изменений ===========================
Процедура ПриНажатииЛевойКнопки(Сост, х, у)
	
	ФормаРасш = СоздатьОбъект("РасширениеФормы");
	Атр = ФормаРасш.ПолучитьАтрибутПоКоординатам(х,у);
	Если ТипЗначенияСтр(Атр) = "АтрибутФормы" Тогда
		Если Атр.Идентификатор = "Версия" Тогда
			ЗапуститьПриложение("https://redmine.kb99.pro/issues/1529#note-18");
		КонецЕсли;  
	КонецЕсли;	
	
КонецПроцедуры

тзПлощадки = СоздатьОбъект("ТаблицаЗначений");
тзПлощадки.НоваяКолонка("Пометка","Число",,,"V",3);
тзПлощадки.НоваяКолонка("Наименование","Строка",,,,15);
тзПлощадки.НоваяКолонка("Адрес",,,,,15);
тзПлощадки.НоваяКолонка("Активна");
тзПлощадки.НоваяКолонка("GUID","Строка",36,,,10);
тзПлощадки.НоваяКолонка("UUID","Строка",36,,,10);
тзПлощадки.НоваяКолонка("ХозСубъект");
тзПлощадки.НоваяКолонка("ДатаСоздания");
тзПлощадки.НоваяКолонка("ДатаИзменения");
