 //+zhukov@КБ99, 2018-01-15 19:11
Перем СписокДействий; // для механизма кнопки "Действия"
Перем ПараПараметров; // Для отправки из формы
Перем ВыбФирма;

Процедура ДоступностьЭлементов()

	Если ГМ.СтатусЗакрыт( ТекущийДокумент() ) = 1 Тогда 
		Форма.ТолькоПросмотр(1); 
		//Форма.кнОК.Доступность(0);
		Форма.кнОтправить.Доступность(0);
		Форма.кнЗаполнить.Доступность(0);				
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриВыбореФирмы()
	ГМ.Инициализация(Контекст);
	Владелец_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
	Владелец_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");	
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());

		ФирмаИмяРеквизита = "";
		ГМ.ПолучитьИмяРеквизитаФирма(Вид(), ФирмаИмяРеквизита);
		Попытка УстановитьАтрибут(ФирмаИмяРеквизита, ВыбФирма);  Исключение КонецПопытки;

		ПриВыбореФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ


Процедура Отправить()

	//Если Проведен()=1 Тогда 
	//	Возврат;
	//КонецЕсли;
	Если ПометкаУдаления()=1 Тогда 
		Возврат;
	КонецЕсли;
	Если ПустоеЗначение(applicationID)=0 Тогда 
		Если Вопрос("Документ уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Записать();
	
	ЗаписьЖурналаРегистрации("Меркурий отправка ВСД транзакция "+НомерДок+" от "+ДатаДок);
	
   ПараПараметров = СоздатьОбъект("СписокЗначений");
   ПараПараметров.Установить("КонтекстДокумента", Контекст);
   ПараПараметров.Установить("ГМ", ГМ);

   ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");
   	
    ДоступностьЭлементов();
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииПлощадки()
	ГМ.СписокКонстант.Установить("Отправитель_Площадка",Владелец_площадка);	
КонецПроцедуры // ПриИзмененииПлощадки

Процедура ПоКнопкеОснование()
	
	Перем Основание;
	
	// если документ основание уже есть, откроем его
	Если ПустоеЗначение(ДокОснование) = 0 Тогда
		ОткрытьФорму(ДокОснование);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводНового(Скопирован)
	UUID = "";
	applicationID = "";
	Статус = ""; 
	Комментарий="";
	Если Скопирован = 0 Тогда
		Попытка	Фирма = ГМ.глЗначениеПоУмолчанию("ОсновнаяФирма"); Исключение КонецПопытки;
		ПриВыбореФирмы();
	КонецЕсли;
	Попытка	Автор = ГМ.ПолучитьАвтора();	Исключение	КонецПопытки;
	Попытка	Филиал = Автор.Филиал;			Исключение	КонецПопытки;
		
	ПричинаРасхождения = ГМ.ПолучитьКонстанту("ПарамПричинаРасхожденияВИнвентаризации"); // "Отсутсвие партий";
	ОписаниеНесоответствия = ГМ.ПолучитьКонстанту("ПарамОписаниеНесоответствияВИнвентаризации"); // "Отсутсвие партий";
КонецПроцедуры

Процедура ПриОткрытии()
	
	ГМ._ПриОткрытии(Контекст);

	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Перейти в журнал");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Отчет о бухгалтерских проводках");
	СписокДействий.ДобавитьЗначение("Структура подчиненности"); 
	СписокДействий.ДобавитьЗначение("История");

	ДоступностьЭлементов();	

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной");
	Форма.Закладки.ДобавитьЗначение("ТабличнаяЧасть");
		
	Форма.Закладки.ТекущаяСтрока(1);
	Форма.ИспользоватьСлой("Шапка,Основной,Подвал");	

	Если ПустоеЗначение(Форма.Параметр)=0 Тогда		
		Если ТипЗначенияСтр( Форма.Параметр ) = "ТаблицаЗначений" Тогда
			
			ГМ2.ВСД2_Инвентаризация_ЗаполнитьТчПоТЗ( Контекст, Форма.Параметр );
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//ЖД
Процедура ПриЗакрытии()
   Если ТипЗначенияСтр(ПараПараметров) = "ГрупповойКонтекст" Тогда
// форма обработки открыта
      ПараПараметров.Форма.Закрыть();
// закрываем форму обработки
   КонецЕсли;
КонецПроцедуры // ПриЗакрытии

//******************************************************************************
// предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если ЗначениеЗакладки="Основной" Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
	ИначеЕсли ЗначениеЗакладки="ТабличнаяЧасть" Тогда
		Форма.ИспользоватьСлой("Шапка,ТабличнаяЧасть,Подвал");
	КонецЕсли;       
	
КонецПроцедуры // ПриВыбореЗакладки()


//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	Параметры = СоздатьОбъект("СписокЗначений");
	Попытка Параметры.ДобавитьЗначение(?((Модифицированность()=0) и (ПустоеЗначение(ТекущийДокумент())=0), ТекущийДокумент(), ГМ.глВзятьКонтекст(Контекст)), "Контекст"); Исключение КонецПопытки;
	Параметры.ДобавитьЗначение(СразуНаПринтер, "Устройство");
	Параметры.ДобавитьЗначение(КолЭкз, "КоличествоКопий");

	ОткрытьФорму("Отчет", ТекущийДокумент(), ГМ.ПолучитьКонстанту("КаталогМодуля")+"ПечФорма_ВСД2_Инвентаризация.ert");
	
КонецПроцедуры // ПоКнопкеПечать()

//******************************************************************************
// Предопределенная процедура
//
Процедура ВводНаОсновании(ДокументОснование)

	ДатаДок = ДокументОснование.ДатаДок;		

КонецПроцедуры // ВводНаОсновании()

Процедура ЗаполнитьСтроку()
	
	ГМ.ЗаполнитьСтрокуДокумента( Контекст, Контекст, Контекст, 1);
	
//	Если ПустоеЗначение(Партия) = 0 Тогда
////		Продукция = Партия.Продукция;
////		ВидПродукции = Партия.ВидПродукции;
////		ЕдиницаИзмерения = Партия.ЕдиницаИзмерения;
////		Продукция_Элемент = Партия.Продукция_Элемент;
////		ДатаИзготовления1 = Партия.ДатаИзготовления1;
////		ДатаИзготовления2 = Партия.ДатаИзготовления2;
////		ДатаСрокГодности1 = Партия.ДатаСрокГодности1;
////		ДатаСрокГодности2 = Партия.ДатаСрокГодности2;
//		Производитель_площадка = Партия.Производитель_Площадка;
////				
//	Иначе //ПустоеЗначение(Партия) = 1 Тогда
////		Продукция = Продукция_Элемент.Продукция;
////		ВидПродукции = Продукция_Элемент.ВидПродукции;
////		ЕдиницаИзмерения = Продукция_Элемент.ЕдиницаИзмерения;
//		Производитель_площадка = Продукция_Элемент.Площадка;
//		Производитель_Страна = ГМ.ПолучитьКонстанту("Страна");
////
////		ДатаИзготовления1 = ГМ.Преобразовать_Дата_в_Строка( ТекущаяДата() );
////		ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка( ТекущаяДата() + Продукция_Элемент.СрокГодности );
////		
//	КонецЕсли;
//	НаименованиеПродукции = Продукция_Элемент.Наименование;
	
КонецПроцедуры

Процедура ПриВыбореПартии()
	
	ЗаполнитьСтроку();	
	
КонецПроцедуры

Процедура ПриВыбореВСД_Элемент()
	ЗаполнитьСтроку();
КонецПроцедуры

Процедура ОткрытьВСД()
	тз = СоздатьОбъект("ТаблицаЗначений");
	тз.НоваяКолонка("ВСД",,,,,50);
	
	Док = СоздатьОбъект("Документ");
	Док.ВыбратьПодчиненныеДокументы(ДатаДок, ДатаДок, ТекущийДокумент());
	Пока Док.ПолучитьДокумент() = 1 Цикл
		тз.НоваяСтрока();
		тз.ВСД = Док.ТекущийДокумент();
	КонецЦикла;
	
	стр=0;
	Если тз.ВыбратьСтроку(стр,"ВСД")=1 Тогда 
		тз.ПолучитьСтрокуПоНомеру(стр);
		ОткрытьФорму(тз.ВСД);
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьПартии()
	ОткрытьФормуМодально("Справочник.ВСД_Партия", ТекущийДокумент());	
КонецПроцедуры

//******************************************************************************
Процедура ПриВыбореХС(Имя, ВыбХС)
	Если Имя = "Владелец_ХозСубъект" Тогда
		Если Владелец_Площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Владелец_Площадка = "";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриВыбореХС

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Владелец_площадка" Тогда
		ВремЭлем = Владелец_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
    ИначеЕсли ЭлементДиалога = "Партия" Тогда
        парам = создатьОбъект("СписокЗначений");
        Парам.Установить("ВСД_Продукция_Элемент",Продукция_Элемент);
        Парам.Установить("Площадка",Владелец_Площадка);
		Парам.Установить("ХозСубъект",Владелец_ХозСубъект);
        ОткрытьФорму("Справочник.ВСД_Партия", Парам);
        ФлагСтандОбр = 0;
	ИначеЕсли Найти(ЭлементДиалога, "Дата") <> 0 Тогда
		Рез = "";
		Если ВвестиДату(Рез,"",)=1 Тогда
			Если Продукция_Элемент.Скоропортящийся = 1 Тогда 
				ДатаИзм = ГМ.Преобразовать_Дата_в_Строка(Рез, , 1)
			Иначе
				ДатаИзм = ГМ.Преобразовать_Дата_в_Строка(Рез, , 0)
			КонецЕсли;
			УстановитьАтрибут(ЭлементДиалога, ДатаИзм );
		КонецЕсли;
        ФлагСтандОбр = 0;		
	ИначеЕсли Найти(ЭлементДиалога, "КлассМаркировки") <> 0 Тогда
		Рез = "";
		Если ГМ.КлассыМаркировки.ВыбратьЗначение(Рез,,,,1) <> 0 Тогда
			УстановитьАтрибут(ЭлементДиалога, Рез);
		КонецЕсли;
        ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

Процедура ЗаполнитьТЧ()
	// Глобавльный модуль Ветис.2.0
	//ГМ2 = СоздатьОбъект("Меркурий_ГлобальныйМодуль2"); = определение перенесено в ПриНачалеРаботыСистемы() Глобальный Модуль конфигурации
	//ГМ2.Инициализация(ГМ);
	
	ГМ2.ВСД2_Инвентаризация_ЗаполнитьТЧ(Контекст);
КонецПроцедуры

Процедура ДействияВСД()
	
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	//СписокДействийВСД.ДобавитьЗначение("СписокВСД","Список ВСД"); 
	СписокДействийВСД.ДобавитьЗначение("ОтправитьВСД","Отправить");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьЗапрос","Открыть Запрос");
	СписокДействийВСД.ДобавитьЗначение("ОткрытьОтвет","Открыть Ответ");
	СписокДействийВСД.ДобавитьЗначение("ПолучитьОтветВетис","Получить ответ ВЕТИС");
			
	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда
		
		Если Зн = "ОткрытьВсдВГис" Тогда
			ГМ.ОткрытьВсдВГис( ТекущийДокумент() );		
		ИначеЕсли Зн = "СписокВСД" Тогда
			ГМ.ОткрытьСписокВсд( ТекущийДокумент() );		
		ИначеЕсли Зн = "ОтправитьВСД" Тогда 
			Отправить();
		ИначеЕсли Зн = "ОткрытьЗапрос" Тогда 
			ГМ.ОткрытьЗапрос( ТекущийДокумент() );		
		ИначеЕсли Зн = "ОткрытьОтвет" Тогда 
			ГМ.ОткрытьОтвет( ТекущийДокумент() );		
		ИначеЕсли Зн = "ПолучитьОтветВетис" Тогда 			
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("КонтекстДокумента", Контекст);
			ПараПараметров.Установить("Действие", "ПолучитьОтвет");		   		   
		   	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");		
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры   

Процедура ПриИзмененииДатыИзготовления1()
	ДатаИзг = ГМ.Преобразовать_СтрокаДата_в_Дата( ДатаИзготовления1 );
	Если Продукция_Элемент.Скоропортящийся = 1 Тогда 
		ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка( ДатаИзг + Продукция_Элемент.СрокГодности, ,1 );
	Иначе
		ДатаСрокГодности1 = ГМ.Преобразовать_Дата_в_Строка( ДатаИзг + Продукция_Элемент.СрокГодности, ,0 );
	КонецЕсли;
КонецПроцедуры

Процедура ПриИзмененииДатыИзготовления2()
	ДатаИзг = ГМ.Преобразовать_СтрокаДата_в_Дата( ДатаИзготовления2 );
	Если Продукция_Элемент.Скоропортящийся = 1 Тогда 
		ДатаСрокГодности2 = ГМ.Преобразовать_Дата_в_Строка( ДатаИзг + Продукция_Элемент.СрокГодности, ,1 );
	Иначе
		ДатаСрокГодности2 = ГМ.Преобразовать_Дата_в_Строка( ДатаИзг + Продукция_Элемент.СрокГодности, ,0 );
	КонецЕсли;
КонецПроцедуры

ВыбФирма = "";