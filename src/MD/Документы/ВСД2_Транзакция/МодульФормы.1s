 //+phsin@КБ99, 2016-08-15 15:02:17
Перем СписокДействий; // для механизма кнопки "Действия"
Перем НомерТекущейФормы;
Перем ТаблицаПечФорм;  // список печатных форм документа
Перем ИмяПеременной;
Перем ПараПараметров; // Для отправки из формы
Перем ВыбФирма;
Перем оПривязки; //:Меркурий.Привязки
Перем тзТочкиПерегрузки; // Точки перегрузки при мультимодальной перевозке
Перем тпТочкиПерегрузки; 
Перем тзСписокВСД; // Список ВСД, оформленных на основании этого документа
Перем тпСписокВСД; 
Перем тзУсловияПеревозки;
Перем тпУсловияПеревозки; 

//Служебные функции
Функция Этот(Конт) 	Возврат Конт; КонецФункции
Функция Сам() 	Возврат Этот(Контекст); КонецФункции

Функция ПоказатьНомерПартии()
    Если Партия.Выбран() = 1 Тогда
        Возврат СокрЛП(Партия.НомерПартии);
	Иначе
		Возврат "";
    КонецЕсли;
КонецФункции          

Функция ПоказатьДатуИзготовления()
    Если Партия.Выбран() = 1 Тогда
        Возврат ГМ.Преобразовать_СтрокаДата_в_ФормализованнаяДата( Партия.ДатаИзготовления1 );
	Иначе
		Возврат "";
    КонецЕсли;
КонецФункции          

Функция ПоказатьГоденДо()
    Если Партия.Выбран() = 1 Тогда
        Возврат ГМ.Преобразовать_СтрокаДата_в_ФормализованнаяДата( Партия.ДатаСрокГодности1 );
	Иначе
		Возврат "";
    КонецЕсли;
КонецФункции          

Функция ПоказатьЦвет()    
	Если СокрЛП(Статус) <> "COMPLETED" Тогда

		Если ПустоеЗначение(тзУсловияПеревозки)=0 Тогда 				
			тзУсловияПеревозки.ВыбратьСтроки();
			Пока тзУсловияПеревозки.ПолучитьСтроку() = 1 Цикл
				Если (тзУсловияПеревозки.Решение = 3) И (ВидПродукции = тзУсловияПеревозки.ВидПродукции) Тогда 
					Возврат "(FONT[0]BRUSH["+ГМ.цвКрасный+"])";
				КонецЕсли;					
			КонецЦикла;
		КонецЕсли;	
		
	    Если Партия.Выбран() = 1 Тогда
			ТЗПартий = СоздатьОбъект("ТаблицаЗначений");
			ВыгрузитьТабличнуюЧасть(ТЗПартий,"Партия,Количество");
			ТЗПартий.Свернуть("Партия","Количество");
			Поз = 0;
			ТЗПартий.НайтиЗначение(Партия,Поз,1);
			Если Партия.Количество < ТЗПартий.ПолучитьЗначение(Поз,"Количество") Тогда
				Возврат "(FONT[0]BRUSH["+ГМ.цвЖелтый+"])";
            ИначеЕсли Партия.ПометкаУдаления()=1 Тогда //[+]serpent, 22.08.2019
                Возврат "(FONT[0]BRUSH["+ГМ.цвКрасный+"])";
			КонецЕсли;			
						
		Иначе
			Возврат "";
		КонецЕсли;
	КонецЕсли;
КонецФункции

Процедура ПриНачалеВыбораЗначения(ЭлементДиалога,ФлагСтандОбр)
	Если ЭлементДиалога = "Отправитель_Площадка" Тогда
		ВремЭлем = Отправитель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
	ИначеЕсли ЭлементДиалога = "Получатель_Площадка" Тогда
		ВремЭлем = Получатель_ХозСубъект;
		ОткрытьФорму("Справочник.ВСД_Площадка",ВремЭлем);
		ФлагСтандОбр = 0;
    ИначеЕсли ЭлементДиалога = "Партия" Тогда
        парам = создатьОбъект("СписокЗначений");
        Парам.Установить("ВСД_Продукция_Элемент",Продукция_Элемент);
        Парам.Установить("Площадка",Отправитель_Площадка);
		Парам.Установить("ХозСубъект",Отправитель_ХозСубъект);
        ОткрытьФорму("Справочник.ВСД_Партия", Парам);
        ФлагСтандОбр = 0;
	ИначеЕсли Найти(ЭлементДиалога, "КлассМаркировки") <> 0 Тогда
		Рез = "";
		Если ГМ.КлассыМаркировки.ВыбратьЗначение(Рез,,,,1) <> 0 Тогда
			УстановитьАтрибут(ЭлементДиалога, Рез);
		КонецЕсли;
        ФлагСтандОбр = 0;
	КонецЕсли;
КонецПроцедуры // ПриНачалеВыбораЗначения()

Процедура ЗаполнитьСтроку()
	
	ГМ.ЗаполнитьСтрокуДокумента( Контекст, Контекст, Контекст );
	
КонецПроцедуры

Процедура ПриИзмененииНоменклатуры()
	//Продукция_Элемент = Номенклатура.ВСД_Продукция_Элемент;
	тзПродукция = ГМ.ПолучитьСписок_ВСДПродукцияЭлемент_По_Номенклатура(Номенклатура);
	Если тзПродукция.КоличествоСтрок()>0 Тогда 
		Продукция_Элемент = тзПродукция.ПолучитьЗначение(1,1);
	КонецЕсли;
	Партия = ГМ.НайтиПервуюПартию( Продукция_Элемент, Отправитель_Площадка, Отправитель_ХозСубъект );

	ЗаполнитьСтроку();
КонецПроцедуры

Процедура ПриИзмененииПродукцияЭлемент()
	Партия = ГМ.НайтиПервуюПартию(Продукция_Элемент,Отправитель_Площадка, Отправитель_ХозСубъект);

	ЗаполнитьСтроку();
КонецПроцедуры

Процедура ПриИзмененииПартии()
	ЗаполнитьСтроку();
КонецПроцедуры

Процедура ПоказатьУсловияПеревозки()
	
	//ТзУсловияПеревозки.очистить();
	тзУсловияПеревозки = СоздатьОбъект("ТаблицаЗначений");
	Если ПустаяСтрока(ИмяФайлаРегионализация) = 0 Тогда

		Если ФС.СуществуетФайл(ИмяФайлаРегионализация) = 1 Тогда
		//	стр = "";
			Попытка 
				тзУсловияПеревозки.Загрузить( ЗначениеИзФайла(ИмяФайлаРегионализация) );  
			Исключение 
				Сообщить("Ошибка при выводе данных на форму"); 
			    Возврат;
			КонецПопытки;
			//тзУсловияПеревозки.ВыводитьПиктограммы("Пометка");
			//ТзУсловияПеревозки.ТекущаяСтрока(1);
		//	ТзУсловияПеревозки.ВыбратьСтроку(стр,"Условия перевозки");
		Иначе
			Состояние("Условия перевозки не получены либо перевозка разрешена без условий!");
		КонецЕсли;
	Иначе
		Состояние("Условия перевозки не получены либо перевозка разрешена без условий!");
	КонецЕсли;
		
	тпУсловияПеревозки  = СоздатьОбъект("Меркурий.ТабличноеПоле.ТЗ");
    тпУсловияПеревозки.Инит( Сам(), "УсловияПеревозки");
    тпУсловияПеревозки.ИмяНастройки = "тпУсловияПеревозки";
    тпУсловияПеревозки.УстановитьТЗ( тзУсловияПеревозки );
    тпУсловияПеревозки.Показать();
	
КонецПроцедуры

Процедура ПоказатьСписокВСД()
	//ТзСписокВСД.очистить();
	тзСписокВСД = СоздатьОбъект("ТаблицаЗначений");
	тзСписокВСД.Загрузить( ГМ.Выбрать_ВСД(ТекущийДокумент()) );

	тзСписокВСД.НоваяКолонка("Продукт",,,,"Продукт",30); 
	тзСписокВСД.НоваяКолонка("Количество",,,,"Количество",10); 
	тзСписокВСД.НоваяКолонка("ДатаИзготовления","Строка",10,,"Дата изготовления",20); 
	тзСписокВСД.НоваяКолонка("Статус","Строка",10,,"Статус",10);
	тзСписокВСД.НоваяКолонка("СтатусВСД",,10,,"Статус ВСД",10);
	тзСписокВСД.НоваяКолонка("Тип","Строка",10,,"Тип ВСД",10); 

	ТзСписокВСД.ВыбратьСтроки();
	Пока ТзСписокВСД.ПолучитьСтроку() = 1 Цикл
		ТзСписокВСД.Статус = ТзСписокВСД.док.Статус;
		ТзСписокВСД.СтатусВСД = ТзСписокВСД.док.СтатусВСД;
		ТзСписокВСД.Тип = ТзСписокВСД.док.ТипВСД;  
		ТзСписокВСД.Продукт = ТзСписокВСД.док.Продукция_Элемент;
		ТзСписокВСД.Количество = ТзСписокВСД.док.Количество;
		ТзСписокВСД.ДатаИзготовления = ТзСписокВСД.док.ДатаИзготовления1;
	КонецЦикла;
	
	//Если ТзСписокВСД.КоличествоСтрок()>0  Тогда
	//    ТзСписокВСД.ТекущаяСтрока(1);
	//КонецЕсли;	

	тпСписокВСД  = СоздатьОбъект("Меркурий.ТабличноеПоле.ТЗ");
    тпСписокВСД.Инит( Сам(), "СписокВСД");
    тпСписокВСД.ИмяНастройки = "тпСписокВСД";
    тпСписокВСД.УстановитьТЗ( тзСписокВСД );
    тпСписокВСД.Показать();

КонецПроцедуры

Процедура кликТзСписокВСД()
	Если ТзСписокВСД.КоличествоСтрок() = 0 Тогда
	    Возврат;
	КонецЕсли;
    ОткрытьФорму(ТзСписокВСД.Док);
КонецПроцедуры


Процедура Регионализация()
	
	Записать();
	тзУсловияПеревозки = ГМ2.УсловияПеревозки_Получить( ТекущийДокумент(), 1, 0 );
	Если ТипЗначенияСтр(тзУсловияПеревозки) = "ТаблицаЗначений" Тогда 
		Если тзУсловияПеревозки.КоличествоСтрок() = 0 Тогда
			Сообщить("Перевозка разрешена без условий");
		Иначе
			ИмяФайлаРегионализация = ГМ2.ПолучитьИмяФайлаРегионализация( ТекущийДокумент() );
			ЗначениеВФайл(ИмяФайлаРегионализация, тзУсловияПеревозки);
		КонецЕсли;
	Иначе
		Сообщить("Перевозка разрешена без условий");
	КонецЕсли;
	
	ПоказатьУсловияПеревозки();
	
КонецПроцедуры 


Процедура ПриВыбореФирмы()
	попытка
		ГМ.Инициализация(Контекст);
		Отправитель_ХозСубъект = ГМ.СписокКонстант.Получить("Отправитель_ХозСубъект");
		Отправитель_Площадка = ГМ.СписокКонстант.Получить("Отправитель_Площадка");
		Экспертиза = ГМ.СписокКонстант.Получить("ВСД_Экспертиза");
		Местность = ГМ.СписокКонстант.Получить("ВСД_Местность");
		Особыеотметки = ГМ.СписокКонстант.Получить("ВСД_ОсобыеОтметки");
	Исключение
		
	КонецПопытки
	
КонецПроцедуры


//======================================================================
Процедура ПриИзмененииСФ()
	Если СписокФирм.ТекущаяСтрока() <> 0 Тогда
		ВыбФирма = СписокФирм.ПолучитьЗначение(СписокФирм.ТекущаяСтрока());

		ФирмаИмяРеквизита = "";
		ГМ.ПолучитьИмяРеквизитаФирма(Вид(), ФирмаИмяРеквизита);
		Попытка УстановитьАтрибут(ФирмаИмяРеквизита, ВыбФирма);  Исключение КонецПопытки;

		ПриВыбореФирмы();
	КонецЕсли;
КонецПроцедуры // ПриИзмененииСФ

Процедура ДоступностьЭлементов()

	Если ГМ.СтатусЗакрыт( ТекущийДокумент() )=1 Тогда 
		Форма.ТолькоПросмотр(1); 
		Форма.кнОК.Доступность(0);
		Форма.кнПодбор.Доступность(0);
		Форма.кнОтправить.Доступность(0);	
	КонецЕсли;

КонецПроцедуры

//*****************************************************************************
// ПоКнопкеОснование()
// 
// Параметры: 
//  Нет
//
// Возвращаемое значение: 
//  Нет
//
// Описание:
// 	Вызывается по кнопке выбора документа основания                  
//
Процедура ПоКнопкеОснование()
	
	Перем Основание;
	
	// если документ основание уже есть, откроем его
	Если ПустоеЗначение(ДокОснование) = 0 Тогда
		ОткрытьФорму(ДокОснование);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводНового(Скопирован)
	UUID = "";
	applicationID = "";
	Статус = "";
	СтатусВСД = "";
	Комментарий = "";
	
	Если Скопирован = 0 Тогда
		
		Попытка Фирма = ГМ.глЗначениеПоУмолчанию("ОсновнаяФирма"); Исключение КонецПопытки;
		ПриВыбореФирмы();
		
		РезультатыИсследований = ГМ.СписокКонстант.Получить("ВСД_РезультатыИсследований");//Перечисление.ВСД2_РезультатИсследований.VSEFULL;
		cargoInspected  	= 1;
		ТермическоеСостояние = 	ГМ.ПолучитьКонстанту("ТермУсловияПеревозки");

	КонецЕсли; 
	Автор = ГМ.ПолучитьАвтора();
	Попытка	Филиал = Автор.Филиал;			Исключение	КонецПопытки;
		
	ИмяФайлаЗапрос = "";
	ИмяФайлаОтвет = "";
	ИмяФайлаРегионализация = "";
	ИмяФайлаМаршрутДоставки = "";
КонецПроцедуры

Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	оПривязки.ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

Процедура ПриОткрытии()
	ГМ._ПриОткрытии(Контекст);

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной");
	Форма.Закладки.ДобавитьЗначение("ТабличнаяЧасть", "Табличная часть");
	Форма.Закладки.ДобавитьЗначение("УсловияПеремещения", "Условия Перемещения");
	Форма.Закладки.ДобавитьЗначение("ВСД", "ВСД");
	Форма.Закладки.ДобавитьЗначение("МультимодальнаяПеревозка", "Мультимодальная перевозка");
	//глАктивизироватьРеквизит(Контекст);		
	Форма.Закладки.ТекущаяСтрока(1);
	Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
	
	ПриЗаписиПерепроводить(1);
	
	//Инициализирум список действий по кнопке "Действия"
	СписокДействий = СоздатьОбъект("СписокЗначений");
	СписокДействий.ДобавитьЗначение("Перейти в журнал");
	СписокДействий.ДобавитьЗначение("Ввести на основании");
	СписокДействий.ДобавитьЗначение("Отчет о движениях документа");
	СписокДействий.ДобавитьЗначение("Структура подчиненности"); 
	СписокДействий.ДобавитьЗначение("История");
	
	ДоступностьЭлементов();
	
	Если Форма.МодальныйРежим() = 0 Тогда
		оПривязки.Привязка("УсловияПеревозки, СписокВСД", "H", "Форма", "W", "Форма");
		оПривязки.Привязка("ТочкиПерегрузки", "H", "Форма", "W", "Форма");
		//оПривязки.Привязка("кнЗакрыть","T","Форма");
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьТочкиПерегрузки()

	СписокПараметров = СоздатьОбъект("СписокЗначений");
	СписокПараметров.Установить("Документ", Контекст );
	ОткрытьФорму("Отчет", СписокПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"Меркурий_МультимодальнаяПеревозка.ert");
	
КонецПроцедуры


///******************************** ADirks 29.11.2019 ************
Функция тзТочкиПерегрузки()
	тзТочкиПерегрузки = "";
	Попытка
		//Порядок колонок имеет значние при сохранинии в Файл / восстановлении => структура должна быть единообразна	
		Если ПустаяСтрока(ИмяФайлаМаршрутДоставки) = 0 Тогда
			тзТочкиПерегрузки = ЗначениеИзФайла(ИмяФайлаМаршрутДоставки);
		КонецЕсли;		
	Исключение		
	КонецПопытки;	
	
	Если ПустоеЗначение(тзТочкиПерегрузки)=1 Тогда 
		тзТочкиПерегрузки = ГМ2.СоздатьТзМаршрутСледования();
	КонецЕсли;
	
	Возврат тзТочкиПерегрузки;
КонецФункции
///******************************** ADirks 29.11.2019 ************

Процедура ПоказатьСписокТочекПерегрузки() Экспорт
	тпТочкиПерегрузки  = СоздатьОбъект("Меркурий.ТабличноеПоле.ТЗ");
	тпТочкиПерегрузки.Инит(Контекст, "ТочкиПерегрузки");
    тпТочкиПерегрузки.ИмяНастройки = "тпТочкиПерегрузки";
    тпТочкиПерегрузки.УстановитьТЗ(тзТочкиПерегрузки());
    тпТочкиПерегрузки.Показать();
КонецПроцедуры

//******************************************************************************
// предопределенная процедура
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	
	Если ЗначениеЗакладки="Основной" Тогда
		Форма.ИспользоватьСлой("Шапка,Основной,Подвал");
	ИначеЕсли ЗначениеЗакладки="ТабличнаяЧасть" Тогда
		Форма.ИспользоватьСлой("Шапка,ТабличнаяЧасть,Подвал");
	ИначеЕсли ЗначениеЗакладки="УсловияПеремещения" Тогда
		Форма.ИспользоватьСлой("Шапка,УсловияПеремещения,Подвал");
		ПоказатьУсловияПеревозки();
	ИначеЕсли ЗначениеЗакладки="ВСД" Тогда
		Форма.ИспользоватьСлой("Шапка,ВСД,Подвал");
		ПоказатьСписокВСД();
	ИначеЕсли ЗначениеЗакладки="МультимодальнаяПеревозка" Тогда
		Форма.ИспользоватьСлой("Шапка,МультимодальнаяПеревозка,Подвал");
		ПоказатьСписокТочекПерегрузки();
	КонецЕсли;       
	
КонецПроцедуры // ПриВыбореЗакладки()


//******************************************************************************
// ПоКнопкеПечать()
// 
// Параметры: 
//	Нет
//
// Описание:
// 	Вызывается по кнопке "Печать"  
// 	
Процедура ПоКнопкеПечать(СразуНаПринтер = 0,КолЭкз = 1)
	
	ГМ.ПечатьСокрВСД( ТекущийДокумент() );
	
КонецПроцедуры // ПоКнопкеПечать()

// *****************************************************************************
Процедура Выбрать_Площадку_ПоХС(Имя, ВыбХС)
		// Это еще надо?
		тз = ГМ.ВыбратьВсеПлощадкиХС(ВыбХС);
		
		СписокОтбора = СоздатьОбъект("СписокЗначений");
		
		Тз.ВыбратьСтроки();
		Пока ТЗ.ПолучитьСТроку()=1 Цикл
			СписокОтбора.ДобавитьЗначение(тз.id);
		КонецЦикла;			
				
		ИмяПеременной = Имя;
		ОткрытьПодбор("Справочник.ВСД_Площадка", ,СписокОтбора);

КонецПроцедуры

// *****************************************************************************
Процедура ОткрытьПартии()
	ОткрытьФормуМодально("Справочник.ВСД_Партия", ТекущийДокумент());	
КонецПроцедуры

// *****************************************************************************
Процедура Отправить()

	Если ПометкаУдаления()=1 Тогда 
		Сообщить("Документ удален, отправка не выполнена");
		Возврат;
	КонецЕсли;
	
	Записать();
	Провести();
	
	ПараПараметров = СоздатьОбъект("СписокЗначений");
	ПараПараметров.Установить("КонтекстДокумента", Контекст);   
	ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы.ert");
   	
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура
//
Процедура ВводНаОсновании(ДокументОснование)
	
	Если ГМ.ПолучитьКонстанту("РазрешитьВводитьМногоВСД") <> 1 Тогда
		// Поищем есть ли уже введенный и проведенный
		ВСД = ГМ.Выбрать_ВСД_транзакция( ДокументОснование );
		Если ПустоеЗначение(ВСД) =  0 Тогда
			ОткрытьФорму(ВСД);
		    СтатусВозврата(0);
			Возврат;
		КонецЕсли;		
	КонецЕсли;	
	
	//Если ДокументОснование.Вид() = "ВСД2_транзакция" Тогда 
	//	//копируем табличную часть
	//	тз = СоздатьОбъект("ТаблицаЗначений");
	//	докОснование.ВыгрузитьТабличнуюЧасть(тз);
	//	ЗагрузитьТабличнуюЧасть( тз );
	//	
	//	ГМ2.ЗаполнитьВСД2_Транзакция_Корректировочный(Контекст, ДокументОснование);
	//Иначе
		// стандартный поиск партий
		ГМ2.ЗаполнитьВСД2_Транзакция(Контекст, ДокументОснование);
	//КонецЕсли;
	
КонецПроцедуры // ВводНаОсновании()

// *****************************************************************************
Процедура ПриЗакрытии()

	Если ТипЗначенияСтр(ПараПараметров) = "ГрупповойКонтекст" Тогда
	// форма обработки открыта
    	ПараПараметров.Форма.Закрыть();
	// закрываем форму обработки
	КонецЕсли;

	Попытка тпТочкиПерегрузки.СохранитьНастройки(); Исключение КонецПопытки;
	Попытка тпСписокВСД.СохранитьНастройки(); Исключение КонецПопытки;
	Попытка тпУсловияПеревозки.СохранитьНастройки(); Исключение КонецПопытки;

КонецПроцедуры // ПриЗакрытии

//******************************************************************************
Процедура ПриВыбореХС(Имя, ВыбХС)
	Если Имя = "Отправитель_ХозСубъект" Тогда
		Если Отправитель_Площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Отправитель_Площадка = "";
		КонецЕсли;
	ИначеЕсли Имя = "Получатель_ХозСубъект" Тогда
		Если Получатель_Площадка.GuidХозСубъекта <> ВыбХС.GUID Тогда
			Получатель_Площадка = "";
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПриВыбореХС

//{ КРОЛ
Процедура ОбработкаПодбораПартий(ВыбЗнач)   
	УдалитьСтроки();
	табРезультат = ВыбЗнач.Получить("ТаблицаПодбора");
	табРезультат.ВыбратьСтроки();
	Пока табРезультат.ПолучитьСтроку()=1 Цикл  
		Попытка			
			табРезультат.Партии.ВыбратьСтроки();
			Пока табРезультат.Партии.ПолучитьСтроку()=1 Цикл
				
				НоваяСтрока();
				Номенклатура = табРезультат.Номенклатура;
				
				Партия = табРезультат.Партии.Партия;
				Количество = табРезультат.Партии.Количество;
				ЕдиницаИзмерения = Партия.ЕдиницаИзмерения;
				Продукция = Партия.Продукция;
				ВидПродукции = Партия.ВидПродукции;
				Продукция_Элемент 	= Номенклатура.ВСД_Продукция_Элемент;
				НаименованиеПродукции = табРезультат.Продукция_Элемент;
			
				ГМ.ЗаполнитьСтрокуДокумента(Контекст, Контекст, Контекст);
			КонецЦикла;
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	ТермическоеСостояние = ГМ.УстановитьТермическоеСостояние(Контекст);
КонецПроцедуры
               
Процедура ОбработкаПодбора(ВыбЗнач, КонтФормы)
	
	Если ТипЗначенияСтр(ВыбЗнач)="СписокЗначений" Тогда
		ОбработкаПодбораПартий(ВыбЗнач);
		
	Иначе	
		Если ВыбЗнач.Вид()="ВСД_Площадка" Тогда
			УстановитьАтрибут(ИмяПеременной, ВыбЗнач);
			КонтФормы.Форма.Закрыть();   
		КонецЕсли;
	КонецЕсли;     
	
КонецПроцедуры

            

Процедура Подбор(Параметры="")  Экспорт
	                                                            
	Если ТипЗначенияСтр(Параметры) <> "СписокЗначений" Тогда
		Параметры = СоздатьОбъект("СписокЗначений");
	КонецЕсли;
	
	// открываем форму подбора
	ОткрытьПодбор("ВСД_Партия", "ДляПодбора", Параметры);
	
КонецПроцедуры // глПодбор()   

Процедура ПоКнопкеПодбор(Зн="")
	
	СпПодбора = СоздатьОбъект("СписокЗначений");
	СпПодбора.ДобавитьЗначение("Подбор1","Подбор 1");
	СпПодбора.ДобавитьЗначение("Подбор2","Подбор 2");
	
	Зн="";
	СпПодбора.ВыбратьЗначение(Зн,,,,1);
	        
	Если Зн="Подбор2" Тогда
		Параметры = СоздатьОбъект("СписокЗначений");
		//Параметры.ДобавитьЗначение(Продукция_Элемент,     "Продукция_Элемент");
		Параметры.ДобавитьЗначение(Отправитель_Площадка,  "Отправитель_Площадка");
		Параметры.ДобавитьЗначение(ДокОснование,  "ДокОснование");
		
		Параметры.ДобавитьЗначение("Подбор партий в документ " + ПредставлениеВида() + " № " + НомерДок, "Заголовок");
		Подбор(Параметры);
	
    Иначе
		Параметры = СоздатьОбъект("СписокЗначений");
		Параметры.ДобавитьЗначение(Отправитель_ХозСубъект,			"Отправитель_ХозСубъект");
		Параметры.ДобавитьЗначение(Отправитель_Площадка,			"Отправитель_Площадка");
		Параметры.ДобавитьЗначение(ДокОснование,					"ДокОснование");
		Параметры.ДобавитьЗначение(Контекст,               "ТекущийДокумент");
		Параметры.ДобавитьЗначение("Подбор Партий в документ " + Текущийдокумент() + " № " + НомерДок, "Заголовок");
	   	ОткрытьФорму("Отчет", Параметры, ГМ.ПолучитьКонстанту("КаталогМодуля")+"Меркурий_ПодборПартий.ert");
	КонецЕсли;	
	
КонецПроцедуры // ПоКнопкеПодбор()
//} КРОЛ

//******************************************************************************
Процедура МенюВСД()
	Если Модифицированность()=1 Тогда 
		Записать(); 
	КонецЕсли;
	
	ГМ.МенюВСД_ВСД2_транзакция( ТекущийДокумент(), Контекст );
	
КонецПроцедуры

//======================================================================
Процедура ПослеСозданияФормы()

	//тпТочкиПерегрузки = оПривязки.СоздатьТабличноеПоле(Контекст, "тпТочкиПерегрузки", ТаблЧасть,,1);

    //тпТочкиПерегрузки  = СоздатьОбъект("Меркурий.ТабличноеПоле.ТЗ");
    //тпТочкиПерегрузки.Инит( Сам(), "тпТочкиПерегрузки");
    //тпТочкиПерегрузки.ИмяНастройки = "тпТочкиПерегрузки";
    //тпТочкиПерегрузки.УстановитьТЗ( тзТочкиПерегрузки );
    //тпТочкиПерегрузки.Показать();

КонецПроцедуры

Процедура ТочкиПерегрузкиВыбор()
	
	ИзменитьТочкиПерегрузки();
	
КонецПроцедуры

Процедура УсловияПеревозкиПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)

	Если ТипРегиона = 3 Тогда
		ГМ.ВывестиФлажок(ОформлениеСтроки, ДанныеСтроки, "Пометка");
		
		// https://help.vetrf.ru/wiki/RegionalizationDecision_v2.0 
		Если ДанныеСтроки.Решение = 1 Тогда 
			ОформлениеСтроки.Ячейки.Решение.УстановитьТекст("разрешено"); 
		ИначеЕсли ДанныеСтроки.Решение = 2 Тогда 
			ОформлениеСтроки.Ячейки.Решение.УстановитьТекст("разрешено при обязательном соблюдении условий"); 
		ИначеЕсли ДанныеСтроки.Решение = 3 Тогда 
			ОформлениеСтроки.Ячейки.Решение.УстановитьТекст("запрещено"); 
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры


ВыбФирма = "";
