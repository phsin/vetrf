Перем оПривязки;
Перем тпПлощадки;
Перем тзПлощадки;

Процедура ПриНачалеВыбораЗначения(ЭлементДиалога, ФлагПродолжения)

	Если ЭлементДиалога = "Регион" Тогда
		ВремЭлем = Страна;
		ОткрытьФорму("Справочник.ВСД_Регион",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Район" Тогда
		ВремЭлем = Регион;
		ОткрытьФорму("Справочник.ВСД_Район",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Город" Тогда
		ВремЭлем = Регион;
		ОткрытьФорму("Справочник.ВСД_Город",ВремЭлем);
		ФлагПродолжения = 0;
	ИначеЕсли ЭлементДиалога = "Улица" Тогда
		ВремЭлем = Город;
		ОткрытьФорму("Справочник.ВСД_Улица",ВремЭлем);
		ФлагПродолжения = 0;
	КонецЕсли;

КонецПроцедуры

Процедура ПриВыбореКонтрагента()
	Наименование = ГМ.ПолучитьНаименованиеКлиента(Контрагент);
	ИНН = ГМ.ПолучитьИНН(Контрагент);
	Огрн = ГМ.ПолучитьОГРН(Контрагент);
КонецПроцедуры

Процедура НайтиОГРН()
	ЗапуститьПриложение("https://egrul.nalog.ru/");
КонецПроцедуры

Процедура ОперацииГИС()
	//меню
	СписокДействийВСД = СоздатьОбъект("СписокЗначений");
	СписокДействийВСД.ДобавитьЗначение("Создать","Создать в ГИС");
	//СписокДействийВСД.ДобавитьЗначение("Изменить","Изменить в ГИС");
	СписокДействийВСД.ДобавитьЗначение("Обновить","Обновить из ГИС");
	//СписокДействийВСД.ДобавитьЗначение("Удалить","Удалить в ГИС");
	
	СписокДействийВСД.ДобавитьЗначение("НайтиGUIDпоИНН","Найти GUID по ИНН");
	СписокДействийВСД.ДобавитьЗначение("ЗагрузитьПлощадкиПоХозСубъекту","Загрузить площадки по ХозСубъекту");
	СписокДействийВСД.ДобавитьЗначение("НайтиПлощадкиПоНазванию","Найти площадки по названию");
			
	стр=0; Зн="";
	Если СписокДействийВСД.ВыбратьЗначение(Зн, "", стр, 60, 1) = 1 Тогда
		
		Записать();

		Если ПометкаУдаления()=1 Тогда
			Сообщить("Справочник помечен на удаление","!");
			Возврат;
		КонецЕсли;
		//Если ПустоеЗначение(GUID)=0 Тогда 
		//	Если Вопрос("Запрос уже был отправлен, отправить ПОВТОРНО?",4,30)<>6 Тогда 
		//		Возврат;
		//	КонецЕсли;
		//КонецЕсли;
		
		Если Зн ="Создать"  Тогда 
			//Создать();			
		    ПараПараметров = СоздатьОбъект("СписокЗначений");
		    ПараПараметров.Установить("Контекст", Контекст);
		    ПараПараметров.Установить("Операция", "CREATE");		    
		//ИначеЕсли Зн = "Изменить" Тогда 
		//	//Изменить();
 		//    ПараПараметров = СоздатьОбъект("СписокЗначений");
		//    ПараПараметров.Установить("Контекст", Контекст);
		//    ПараПараметров.Установить("Операция", "UPDATE");		
		ИначеЕсли Зн = "Обновить" Тогда 
			//ОбновитьИзМеркурий();
			Если ПустоеЗначение(GUID)=1 Тогда
				Предупреждение("Получить информацию о продукции можно только при наличии GUID");
				Возврат;
			Иначе
				//Если Вопрос("Загрузить сведения из Меркурий?",4,30)<>6 Тогда 
				//	Возврат;
				//КонецЕсли;
			КонецЕсли;			
		    ПараПараметров = СоздатьОбъект("СписокЗначений");
		    ПараПараметров.Установить("Контекст", Контекст);
		    ПараПараметров.Установить("Операция", "Загрузить");		
		//ИначеЕсли Зн = "Удалить" Тогда
		//
		//   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		//   	ПараПараметров.Установить("Контекст", Контекст);
		//   	ПараПараметров.Установить("Операция", "DELETE");		
		ИначеЕсли Зн = "НайтиGUIDпоИНН" Тогда
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("Контекст", Контекст);
		   	ПараПараметров.Установить("Операция", "НайтиGUIDпоИНН");		
		ИначеЕсли Зн = "ЗагрузитьПлощадкиПоХозСубъекту" Тогда
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("Контекст", Контекст);
		   	ПараПараметров.Установить("Операция", "ЗагрузитьПлощадкиПоХозСубъекту");		
		ИначеЕсли Зн = "НайтиПлощадкиПоНазванию" Тогда
		   	ПараПараметров = СоздатьОбъект("СписокЗначений");
		   	ПараПараметров.Установить("Контекст", Контекст);
		   	ПараПараметров.Установить("Операция", "НайтиПлощадкиПоНазванию");		
		Иначе
		   	Возврат;
		КонецЕсли;
		   
  		ЗаписьЖурналаРегистрации("Меркурий отправка в ГИС Меркурий "+Код);
		ОткрытьФорму("Отчет", ПараПараметров, ГМ.ПолучитьКонстанту("КаталогМодуля")+"ВСД_ОтправкаИзФормы_Справочник.ert");		
		
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриОткрытии()
	ГМ._ПриОткрытии(Контекст);

	Форма.ИспользоватьЗакладки(1);
	Форма.Закладки.ДобавитьЗначение("Основной", "Основные сведения");
	Форма.Закладки.ДобавитьЗначение("Площадки", "Площадки");
	
	Форма.Закладки.ТекущаяСтрока(1);
	Форма.ИспользоватьСлой(Форма.Закладки.ПолучитьЗначение(1), 2);

	Если Форма.МодальныйРежим() = 0 Тогда
		оПривязки.Привязка("тпПлощадки", "H", "Форма", "W", "Форма");
		//оПривязки.Привязка("кнПодбор,кнУдалить,кнУдалитьВсе", "T", "Форма", "L", "Форма");
		//оПривязки.Привязка("кнОК,кнЗаписать,кнЗакрыть","T","Форма");
	КонецЕсли;

	
КонецПроцедуры


Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
	
	Если Выбран() = 1 Тогда
		// Закладка ассортимент     
		тз = ГМ.ПолучитьСписок_Номенклатура_По_ВСД_Продукция_Элемент( ТекущийЭлемент() );
		
		//ТЗ.Выгрузить(СписокТМЦ);
		тзПлощадки.УдалитьСтроки();
		Если ПустаяСтрока(GUID) = 0 Тогда
			Спр = СоздатьОбъект("Справочник.ВСД_Площадка");
			Спр.ВыбратьЭлементыПоРеквизиту("GuidХозСубъекта",GUID);
			Пока Спр.ПолучитьЭлемент() = 1 Цикл
				тзПлощадки.НоваяСтрока();
				тзПлощадки.Наименование = Спр.Наименование;
				тзПлощадки.Грузополучатель = Спр.Контрагент;
				тзПлощадки.GUID = Спр.GUID;
				тзПлощадки.Адрес = Спр.Адрес;
				тзПлощадки.Площадка = Спр.ТекущийЭлемент();
			КонецЦикла;
		КонецЕсли;
		тпПлощадки.ОбновитьСтроки();
		
	КонецЕсли;
КонецПроцедуры

//======================================================================
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриВыбореЗакладки(НомерЗакладки, ЗначениеЗакладки)
	Форма.ИспользоватьСлой(ЗначениеЗакладки, 2); 
КонецПроцедуры

//******************************************************************************
Процедура ПослеСозданияФормы()
	тпПлощадки=ГМ.СоздатьТабличноеПоле(Контекст, "тпПлощадки", тзПлощадки, 0);
КонецПроцедуры

//******************************************************************************
Процедура тпПлощадкиВыбор(ТабличноеПоле, Стр, Колонка, ТипРегиона)
	Если ТипРегиона = 3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзПлощадки);
		
		//КодКолонки = Колонка.Данные;		
		//Если КодКолонки = "Грузополучатель" Тогда
		//	_знач = тзПлощадки.Грузополучатель;
		//	ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, "Грузополучатель", "0x00000200");		
		//Иначе
			//Если ТекущийЭлемент().ЭтоГруппа() = 0 Тогда
				ОткрытьФорму(тзПлощадки.Площадка);
			//КонецЕсли;
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры


тзПлощадки= СоздатьОбъект("ТаблицаЗначений");
тзПлощадки.НоваяКолонка("Наименование",,,,"Наименование",30);
тзПлощадки.НоваяКолонка("Грузополучатель",,,,"Грузополучатель",20); 
тзПлощадки.НоваяКолонка("Адрес",,,,"Адрес",30); 
тзПлощадки.НоваяКолонка("Площадка");
тзПлощадки.НоваяКолонка("GUID",36,,,"GUID",15); 