Перем Неопределено;
Перем оПривязки Экспорт;
Перем тпЗакладки;
Перем тпОтбор;
Перем тпПлощадки, тзПлощадки;
Перем ПредыдущийЭлемент;

//===========================================================
Процедура ПриВыбореОбъектаЗакладки() Далее


///******************************** ADirks 06.12.2019 ************
Процедура ПриОтжатииЛевойКнопки(Сост, Лево, Верх, ФСО) Экспорт
	Если тпОтбор <> Неопределено Тогда
		Если тпОтбор._ПриОтжатииЛевойКнопки(Сост, Лево, Верх, ФСО) = 1 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 06.12.2019 ************

///******************************** ADirks 04.12.2019 ************
Процедура тпОтбор_Инит()
	тпОтбор = СоздатьОбъект("Меркурий.ТабличноеПоле.Фильтр.ФормаСписка");
	тпОтбор.Инит(Контекст, "тпОтбор", "ВСД_ХозСубъект");
	
	тпОтбор.Добавить("ТолькоАктуальные", "Только актуальные", "Флаг", "Спр.IsMark = 0 AND $Спр.active = 1", "Спр.ISMARK = ''");
	тпОтбор.ДобавитьПоКолонке("Контрагент");
	тпОтбор.ДобавитьПоКолонке("Наименование");
	тпОтбор.ДобавитьПоКолонке("ИНН");

	тпОтбор.Добавить("НаименованиеПлощадки", "Наименование площадки", "Строка", "ВСД_Площадка.Descr",,
		"LEFT JOIN $Справочник.ВСД_Площадка ВСД_Площадка ON $ВСД_Площадка.GuidХозСубъекта = $Спр.GUID AND $Спр.GUID != ''",
		"LEFT JOIN [Справочник.ВСД_Площадка] ВСД_Площадка ON ВСД_Площадка.GuidХозСубъекта = Спр.GUID AND Спр.GUID != ''"
	);

	тпОтбор.Пометка("ТолькоАктуальные", 1);
	
	тпОтбор.ВосстановитьНастройки();
	
	Если ТипЗначенияСтр(Форма.Параметр) = "СписокЗначений" Тогда
		тпОтбор.фНеСохранятьНастройкиФильтров = 1;
		сзПарам = Форма.Параметр;
		тпОтбор.Значение("Контрагент", сзПарам.Получить("Контрагент"));
	КонецЕсли;


	тпОтбор.Показать();
	тпОтбор.ОбновитьСтроки();

	тпОтбор.УстановитьОтбор();
КонецПроцедуры
///******************************** ADirks 04.12.2019 ************


Процедура ОткрытьПлощадки(элХС = "")
	Если элХС = "" Тогда
		элХС = ТекущийЭлемент();
	КонецЕсли;
	
	
	Если ПустоеЗначение(элХС) = 1 Тогда
		Возврат;
	ИначеЕсли ПустоеЗначение(элХС.GUID) = 1 Тогда
		Предупреждение("Не загружен GUID", 5);
		Возврат;
	КонецЕсли;

	ОткрытьФорму("Справочник.ВСД_Площадка", элХС);
КонецПроцедуры

///******************************** ADirks 04.07.2018 ************
Процедура ОбновитьПоКонтрагенту(элХС)
	Ответ = Вопрос("Обновить карточку ХС по данным контрагента?", "Да+Нет");
	Если Ответ <> "Да" Тогда
		Возврат;
	КонецЕсли;
	
	элКонтрагент = элХС.Контрагент;
	
	спрХС = СоздатьОбъект("Справочник.ВСД_ХозСубъект");
	спрХС.НайтиЭлемент(элХС);
	спрХС.ИНН = ГМ.ПолучитьИНН(элКонтрагент);
	спрХС.ОГРН = ГМ.ПолучитьОГРН(элКонтрагент);
	спрХС.Записать();
	
	Форма.Обновить();
КонецПроцедуры
///******************************** ADirks 04.07.2018 ************

///******************************** ADirks 04.07.2018 ************
Процедура ПолучитьГУИД(элХС)
	Если ПустаяСтрока(элХС.ИНН) = 1 Тогда
		Предупреждение("Для получения GUID необходимо указать ИНН", 10);
		Возврат;
	КонецЕсли;
	ГМ.ХС_ПолучитьGuid(элХС);
КонецПроцедуры
///******************************** ADirks 04.07.2018 ************

///******************************** ADirks 04.07.2018 ************
Процедура ЗагрузитьПлощадки(элХС)
	
	Если ПустаяСтрока(элХС.GUID) = 1 Тогда
		Предупреждение("Для загрузки площадок необходимо загрузить (или указать) GUID", 10);
		Возврат;
	КонецЕсли;
	ГМ2.ПолучитьПлощадкиПоХозсубъекту(элХС);
	
КонецПроцедуры
///******************************** ADirks 04.07.2018 ************

///******************************** ADirks 10.07.2018 ************
Процедура СоздатьХС(элХС)
	сзПарам = СоздатьОбъект("СписокЗначений");
	сзПарам.Установить("ХС", элХС);
	ГМ.ОткрытьОбработку("ВСД_СоздатьХС", сзПарам);
КонецПроцедуры
///******************************** ADirks 10.07.2018 ************

///******************************** ADirks 04.07.2018 ************
Процедура Действия()
	Если Выбран() = 0 Тогда
		Возврат;
	КонецЕсли;
	элХС = ТекущийЭлемент();
	
	сзМеню = СоздатьОбъект("СписокЗначений");
	сзМеню.ДобавитьЗначение("ОткрытьПлощадки", "Открыть площадки для <"+элХС+">");
	сзМеню.ДобавитьЗначение("ЗагрузитьПлощадки", "Загрузить площадки для <"+элХС+">");
	сзМеню.ДобавитьЗначение("ПолучитьГУИД", "Получить GUID по ИНН");
	Если ПустоеЗначение(элХС.Контрагент) = 0 Тогда
		сзМеню.ДобавитьЗначение("ОбновитьПоКонтрагенту", "Обновить ИНН и ОГРН из карточки контрагента");
	КонецЕсли;
	Если ПустаяСтрока(элХС.GUID) = 1 Тогда
		сзМеню.ДобавитьЗначение("СоздатьХС", "Создать ХС в Меркурии");
	КонецЕсли;
	
	Команда = "";
	Если сзМеню.ВыбратьЗначение(Команда,,,, 1) <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	Попытка		
		ГМ.Инициализация( Контекст );
	Исключение
	КонецПопытки;
	
	Если Команда = "ОткрытьПлощадки" Тогда
		ОткрытьПлощадки(элХС);
	ИначеЕсли Команда = "ЗагрузитьПлощадки" Тогда
		ЗагрузитьПлощадки(элХС);
		ПриВыбореОбъектаЗакладки(); //[+]serpent, 05.07.2019
	ИначеЕсли Команда = "ОбновитьПоКонтрагенту" Тогда
		ОбновитьПоКонтрагенту(элХС);
	ИначеЕсли Команда = "ПолучитьГУИД" Тогда
		ПолучитьГУИД(элХС);
	ИначеЕсли Команда = "СоздатьХС" Тогда
		СоздатьХС(элХС);
	КонецЕсли;
КонецПроцедуры
///******************************** ADirks 04.07.2018 ************


//******************************************************************************
Процедура тпПлощадкиВыбор(ТабличноеПоле, Стр, Колонка, ТипРегиона)
	Если ТипРегиона = 3 Тогда
		ГМ.ПриАктивизацииСтрокиТП(ТабличноеПоле, тзПлощадки);
		КодКолонки = Колонка.Данные;
		Если КодКолонки = "Грузополучатель" Тогда
			_знач = тзПлощадки.Грузополучатель;
			ТабличноеПоле.РедактироватьЗначение(Стр, Колонка, ТипРегиона, _знач,50,0, "Грузополучатель", "0x00000200");		
		Иначе
			Если ТекущийЭлемент().ЭтоГруппа() = 0 Тогда
				ОткрытьФорму(тзПлощадки.Площадка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриНачалеВыбораЗначения(Имя, ФСО)
	Если тпОтбор.ПриНачалеВыбораЗначения(Имя, ФСО) = 1 Тогда
		//уже отработано
	Иначе
		ТекЭлем = ТекущийЭлемент();
		Если ПустоеЗначение(ТекЭлем) = 0 Тогда
			Если Имя = "Грузополучатель" Тогда   
				ВидСтравочника = Метаданные.Справочник("ВСД_Площадка").Реквизит("Контрагент").Вид;
				Если Метаданные.Справочник(ВидСтравочника).Владелец.Выбран() = 1 Тогда
					СуперВладелец = ТекЭлем.Контрагент;
					Если СуперВладелец.Выбран() = 1 Тогда
						Парам = "";
						ОткрытьФорму("Справочник."+ВидСтравочника,Парам);
						Парам.ИспользоватьВладельца(СуперВладелец);
						ФСО = 0;           
					Иначе
						Сообщить("Не выбран контрагент ХозСубъекта!");
						ФСО = 0;           
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Процедура тпПлощадкиПриРедактированииЗначения(ТабличноеПоле, Стр, Колонка, ТипРегиона, __знач)
	Если ТипРегиона = 3 Тогда
		КодКолонки = Колонка.Данные;

		Если КодКолонки = "Грузополучатель" Тогда
			ТекЗнач = ТабличноеПоле.ТекущиеДанные.Грузополучатель;

			Если ТекЗнач <> __знач Тогда
				тзПлощадки.УстановитьЗначение(ТабличноеПоле.ТекущаяСтрока,КодКолонки,__знач);

				Спр = СоздатьОбъект("Справочник.ВСД_Площадка");
				Спр.НайтиЭлемент(ТабличноеПоле.ТекущиеДанные.Площадка);
				Спр.Контрагент = __знач;
				Спр.Записать();
				
				тпПлощадки.ОбновитьСтроки();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
	
//******************************************************************************
Процедура ПриВыбореОбъектаЗакладки()
	Если ПустоеЗначение(тпЗакладки)=1 Тогда Возврат; КонецЕсли;
	стрИмяЗакладки=тпЗакладки.ТекущаяКолонка.Имя;
	текЭлемент=ТекущийЭлемент();
	
	Если стрИмяЗакладки="Отбор" Тогда
		Форма.ИспользоватьСлой("Общий,Отбор", 2);
	ИначеЕсли стрИмяЗакладки="ОбщаяИнформация" Тогда
	ИначеЕсли стрИмяЗакладки="Площадки" Тогда
		Если текЭлемент.Выбран() = 0 Тогда Возврат;
		КонецЕсли;
		тзПлощадки.УдалитьСтроки();
		Если ПустаяСтрока(текЭлемент.GUID) = 0 Тогда
			Спр = СоздатьОбъект("Справочник.ВСД_Площадка");
			Спр.ВыбратьЭлементыПоРеквизиту("GuidХозСубъекта",текЭлемент.GUID);
			Пока Спр.ПолучитьЭлемент() = 1 Цикл
				тзПлощадки.НоваяСтрока();
				тзПлощадки.Наименование = Спр.Наименование;
				тзПлощадки.Грузополучатель = Спр.Контрагент;
				тзПлощадки.GUID = Спр.GUID;
				тзПлощадки.Адрес = Спр.Адрес;
				тзПлощадки.Площадка = Спр.ТекущийЭлемент();
			КонецЦикла;
		КонецЕсли;
		тпПлощадки.ОбновитьСтроки();
		Форма.ИспользоватьСлой("Общий,Площадки", 2);
	КонецЕсли;
КонецПроцедуры

//******************************************************************************
Функция ПриОбновленииФормы()
	текЭлемент=ТекущийЭлемент();
	Если текЭлемент.Выбран()=0 Тогда Возврат ""; КонецЕсли;
	Если ПредыдущийЭлемент=текЭлемент Тогда Возврат ""; КонецЕсли;
	ПредыдущийЭлемент=текЭлемент;

    ПриВыбореОбъектаЗакладки();
КонецФункции


//******************************************************************************
Процедура тпЗакладкиПриВыбореЗаголовка(тпЗакладки, ОбъектКолонка)
	ГМ._ЗакладкиВыбор(тпЗакладки, ОбъектКолонка);
	ПриВыбореОбъектаЗакладки();
КонецПроцедуры

//======================================================================
Процедура ПриОткрытии()
	ГМ._ПриОткрытии(Контекст);

	Если Форма.МодальныйРежим() = 0 Тогда
		Попытка

			оПривязки.Привязка("МногострочнаяЧасть","H","Форма","W","Форма");			
			оПривязки.Привязка("тпЗакладки,рамкаЗакладки", "T", "Форма", "W", "Форма");
			оПривязки.Привязка("тпПлощадки", "T", "Форма", "W", "Форма");
			оПривязки.Привязка("тпОтбор", "T", "Форма", "W", "Форма");
			оПривязки.Привязка("кнЗакрыть, кнОткрытьПлощадки, кнДействия","T","Форма");
			
		Исключение
			//привязки не инициализировались, попробуем еще раз
			Сообщить("Справочник ВСД_Продукция_Элемент - Не удалось инициализировать привязки");			
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры // ПриОткрытии

//******************************************************************************
Процедура ПослеСозданияФормы()
	Перем ВремТЗ;
	
	// Закладки
	спЗакладки=СоздатьОбъект("СписокЗначений");
	спЗакладки.ДобавитьЗначение("Отбор", "Отбор");
// 	спЗакладки.ДобавитьЗначение("ОбщаяИнформация", "Общая информация");
	спЗакладки.ДобавитьЗначение("Площадки", "Площадки");

	ОбъектФорма=СоздатьОбъект("Форма");
	ОбъектФорма.УстановитьФорму(Форма);

	тпЗакладки=ОбъектФорма.СоздатьЭлементУправления("ТабличноеПоле",Форма.тпЗакладки);
	ГМ._ЗакладкиЗаполнить(тпЗакладки, спЗакладки);

	// Отбор
	тпОтбор_Инит();
	
	// Площадки
	ВидСтравочника = Метаданные.Справочник("ВСД_Площадка").Реквизит("Контрагент").Вид;
	
	тзПлощадки= СоздатьОбъект("ТаблицаЗначений");
	тзПлощадки.НоваяКолонка("Наименование",,,,"Наименование",10);
	тзПлощадки.НоваяКолонка("Грузополучатель","Справочник."+ВидСтравочника,,,"Грузополучатель",20); 
	тзПлощадки.НоваяКолонка("GUID",36,,,"GUID",15); 
	тзПлощадки.НоваяКолонка("Адрес",,,,"Адрес",30); 
	тзПлощадки.НоваяКолонка("Площадка");

	тпПлощадки=ГМ.СоздатьТабличноеПоле(Контекст, "тпПлощадки", тзПлощадки, 0);
	
	ПриВыбореОбъектаЗакладки();	
КонецПроцедуры

//******************************************************************************
// Предопределенная процедура.
//
Процедура ПриЗакрытии()
	Если тпОтбор <> Неопределено Тогда
		тпОтбор.СохранитьНастройки();
	КонецЕсли;
КонецПроцедуры // ПриЗакрытии()
	
Процедура ПриИзмененииРазмераОкна(ТипСобытия, НовШирина, НовВысота) Экспорт
	ГМ._ПриИзмененииРазмераОкна(Контекст, ТипСобытия, НовШирина, НовВысота);
КонецПроцедуры

//_____________________________________________________________________________
Процедура ПослеОткрытия()
	ГМ._ПослеОткрытия(Контекст);
КонецПроцедуры

//******************************************************************************
// //[+]serpent, 23.09.2019
Процедура тпПлощадкиПриВыводеСтроки(ТабличноеПоле,ОформлениеСтроки,ДанныеСтроки,ТипРегиона)
    Если ТипРегиона=3 Тогда
        ТекПлощадка = ДанныеСтроки.Площадка;
        Если (ТекПлощадка.ПометкаУдаления()=1) или (ТекПлощадка.active <> 1)  Тогда
            ОформлениеСтроки.ЦветФона = ГМ.цвКрасный;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры
